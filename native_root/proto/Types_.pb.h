// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Types_.proto

#ifndef PROTOBUF_INCLUDED_Types_5f_2eproto
#define PROTOBUF_INCLUDED_Types_5f_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Types_5f_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Types_5f_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[29]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Types_5f_2eproto();
namespace types_ {
class AndNode;
class AndNodeDefaultTypeInternal;
extern AndNodeDefaultTypeInternal _AndNode_default_instance_;
class BinaryConstants;
class BinaryConstantsDefaultTypeInternal;
extern BinaryConstantsDefaultTypeInternal _BinaryConstants_default_instance_;
class BinaryNode;
class BinaryNodeDefaultTypeInternal;
extern BinaryNodeDefaultTypeInternal _BinaryNode_default_instance_;
class BooleanNode;
class BooleanNodeDefaultTypeInternal;
extern BooleanNodeDefaultTypeInternal _BooleanNode_default_instance_;
class Condition;
class ConditionDefaultTypeInternal;
extern ConditionDefaultTypeInternal _Condition_default_instance_;
class DecimalNode;
class DecimalNodeDefaultTypeInternal;
extern DecimalNodeDefaultTypeInternal _DecimalNode_default_instance_;
class DoubleNode;
class DoubleNodeDefaultTypeInternal;
extern DoubleNodeDefaultTypeInternal _DoubleNode_default_instance_;
class ExpressionList;
class ExpressionListDefaultTypeInternal;
extern ExpressionListDefaultTypeInternal _ExpressionList_default_instance_;
class ExpressionRoot;
class ExpressionRootDefaultTypeInternal;
extern ExpressionRootDefaultTypeInternal _ExpressionRoot_default_instance_;
class ExtGandivaType;
class ExtGandivaTypeDefaultTypeInternal;
extern ExtGandivaTypeDefaultTypeInternal _ExtGandivaType_default_instance_;
class Field;
class FieldDefaultTypeInternal;
extern FieldDefaultTypeInternal _Field_default_instance_;
class FieldNode;
class FieldNodeDefaultTypeInternal;
extern FieldNodeDefaultTypeInternal _FieldNode_default_instance_;
class FloatNode;
class FloatNodeDefaultTypeInternal;
extern FloatNodeDefaultTypeInternal _FloatNode_default_instance_;
class FunctionNode;
class FunctionNodeDefaultTypeInternal;
extern FunctionNodeDefaultTypeInternal _FunctionNode_default_instance_;
class FunctionSignature;
class FunctionSignatureDefaultTypeInternal;
extern FunctionSignatureDefaultTypeInternal _FunctionSignature_default_instance_;
class GandivaDataTypes;
class GandivaDataTypesDefaultTypeInternal;
extern GandivaDataTypesDefaultTypeInternal _GandivaDataTypes_default_instance_;
class GandivaFunctions;
class GandivaFunctionsDefaultTypeInternal;
extern GandivaFunctionsDefaultTypeInternal _GandivaFunctions_default_instance_;
class IfNode;
class IfNodeDefaultTypeInternal;
extern IfNodeDefaultTypeInternal _IfNode_default_instance_;
class InNode;
class InNodeDefaultTypeInternal;
extern InNodeDefaultTypeInternal _InNode_default_instance_;
class IntConstants;
class IntConstantsDefaultTypeInternal;
extern IntConstantsDefaultTypeInternal _IntConstants_default_instance_;
class IntNode;
class IntNodeDefaultTypeInternal;
extern IntNodeDefaultTypeInternal _IntNode_default_instance_;
class LongConstants;
class LongConstantsDefaultTypeInternal;
extern LongConstantsDefaultTypeInternal _LongConstants_default_instance_;
class LongNode;
class LongNodeDefaultTypeInternal;
extern LongNodeDefaultTypeInternal _LongNode_default_instance_;
class NullNode;
class NullNodeDefaultTypeInternal;
extern NullNodeDefaultTypeInternal _NullNode_default_instance_;
class OrNode;
class OrNodeDefaultTypeInternal;
extern OrNodeDefaultTypeInternal _OrNode_default_instance_;
class Schema;
class SchemaDefaultTypeInternal;
extern SchemaDefaultTypeInternal _Schema_default_instance_;
class StringConstants;
class StringConstantsDefaultTypeInternal;
extern StringConstantsDefaultTypeInternal _StringConstants_default_instance_;
class StringNode;
class StringNodeDefaultTypeInternal;
extern StringNodeDefaultTypeInternal _StringNode_default_instance_;
class TreeNode;
class TreeNodeDefaultTypeInternal;
extern TreeNodeDefaultTypeInternal _TreeNode_default_instance_;
}  // namespace types_
namespace google {
namespace protobuf {
template<> ::types_::AndNode* Arena::CreateMaybeMessage<::types_::AndNode>(Arena*);
template<> ::types_::BinaryConstants* Arena::CreateMaybeMessage<::types_::BinaryConstants>(Arena*);
template<> ::types_::BinaryNode* Arena::CreateMaybeMessage<::types_::BinaryNode>(Arena*);
template<> ::types_::BooleanNode* Arena::CreateMaybeMessage<::types_::BooleanNode>(Arena*);
template<> ::types_::Condition* Arena::CreateMaybeMessage<::types_::Condition>(Arena*);
template<> ::types_::DecimalNode* Arena::CreateMaybeMessage<::types_::DecimalNode>(Arena*);
template<> ::types_::DoubleNode* Arena::CreateMaybeMessage<::types_::DoubleNode>(Arena*);
template<> ::types_::ExpressionList* Arena::CreateMaybeMessage<::types_::ExpressionList>(Arena*);
template<> ::types_::ExpressionRoot* Arena::CreateMaybeMessage<::types_::ExpressionRoot>(Arena*);
template<> ::types_::ExtGandivaType* Arena::CreateMaybeMessage<::types_::ExtGandivaType>(Arena*);
template<> ::types_::Field* Arena::CreateMaybeMessage<::types_::Field>(Arena*);
template<> ::types_::FieldNode* Arena::CreateMaybeMessage<::types_::FieldNode>(Arena*);
template<> ::types_::FloatNode* Arena::CreateMaybeMessage<::types_::FloatNode>(Arena*);
template<> ::types_::FunctionNode* Arena::CreateMaybeMessage<::types_::FunctionNode>(Arena*);
template<> ::types_::FunctionSignature* Arena::CreateMaybeMessage<::types_::FunctionSignature>(Arena*);
template<> ::types_::GandivaDataTypes* Arena::CreateMaybeMessage<::types_::GandivaDataTypes>(Arena*);
template<> ::types_::GandivaFunctions* Arena::CreateMaybeMessage<::types_::GandivaFunctions>(Arena*);
template<> ::types_::IfNode* Arena::CreateMaybeMessage<::types_::IfNode>(Arena*);
template<> ::types_::InNode* Arena::CreateMaybeMessage<::types_::InNode>(Arena*);
template<> ::types_::IntConstants* Arena::CreateMaybeMessage<::types_::IntConstants>(Arena*);
template<> ::types_::IntNode* Arena::CreateMaybeMessage<::types_::IntNode>(Arena*);
template<> ::types_::LongConstants* Arena::CreateMaybeMessage<::types_::LongConstants>(Arena*);
template<> ::types_::LongNode* Arena::CreateMaybeMessage<::types_::LongNode>(Arena*);
template<> ::types_::NullNode* Arena::CreateMaybeMessage<::types_::NullNode>(Arena*);
template<> ::types_::OrNode* Arena::CreateMaybeMessage<::types_::OrNode>(Arena*);
template<> ::types_::Schema* Arena::CreateMaybeMessage<::types_::Schema>(Arena*);
template<> ::types_::StringConstants* Arena::CreateMaybeMessage<::types_::StringConstants>(Arena*);
template<> ::types_::StringNode* Arena::CreateMaybeMessage<::types_::StringNode>(Arena*);
template<> ::types_::TreeNode* Arena::CreateMaybeMessage<::types_::TreeNode>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace types_ {

enum GandivaType {
  NONE = 0,
  BOOL = 1,
  UINT8 = 2,
  INT8 = 3,
  UINT16 = 4,
  INT16 = 5,
  UINT32 = 6,
  INT32 = 7,
  UINT64 = 8,
  INT64 = 9,
  HALF_FLOAT = 10,
  FLOAT = 11,
  DOUBLE = 12,
  UTF8 = 13,
  BINARY = 14,
  FIXED_SIZE_BINARY = 15,
  DATE32 = 16,
  DATE64 = 17,
  TIMESTAMP = 18,
  TIME32 = 19,
  TIME64 = 20,
  INTERVAL = 21,
  DECIMAL = 22,
  LIST = 23,
  STRUCT = 24,
  UNION = 25,
  DICTIONARY = 26,
  MAP = 27
};
bool GandivaType_IsValid(int value);
const GandivaType GandivaType_MIN = NONE;
const GandivaType GandivaType_MAX = MAP;
const int GandivaType_ARRAYSIZE = GandivaType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GandivaType_descriptor();
inline const ::std::string& GandivaType_Name(GandivaType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GandivaType_descriptor(), value);
}
inline bool GandivaType_Parse(
    const ::std::string& name, GandivaType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GandivaType>(
    GandivaType_descriptor(), name, value);
}
enum DateUnit {
  DAY = 0,
  MILLI = 1
};
bool DateUnit_IsValid(int value);
const DateUnit DateUnit_MIN = DAY;
const DateUnit DateUnit_MAX = MILLI;
const int DateUnit_ARRAYSIZE = DateUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* DateUnit_descriptor();
inline const ::std::string& DateUnit_Name(DateUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    DateUnit_descriptor(), value);
}
inline bool DateUnit_Parse(
    const ::std::string& name, DateUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DateUnit>(
    DateUnit_descriptor(), name, value);
}
enum TimeUnit {
  SEC = 0,
  MILLISEC = 1,
  MICROSEC = 2,
  NANOSEC = 3
};
bool TimeUnit_IsValid(int value);
const TimeUnit TimeUnit_MIN = SEC;
const TimeUnit TimeUnit_MAX = NANOSEC;
const int TimeUnit_ARRAYSIZE = TimeUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* TimeUnit_descriptor();
inline const ::std::string& TimeUnit_Name(TimeUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimeUnit_descriptor(), value);
}
inline bool TimeUnit_Parse(
    const ::std::string& name, TimeUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeUnit>(
    TimeUnit_descriptor(), name, value);
}
enum IntervalType {
  YEAR_MONTH = 0,
  DAY_TIME = 1
};
bool IntervalType_IsValid(int value);
const IntervalType IntervalType_MIN = YEAR_MONTH;
const IntervalType IntervalType_MAX = DAY_TIME;
const int IntervalType_ARRAYSIZE = IntervalType_MAX + 1;

const ::google::protobuf::EnumDescriptor* IntervalType_descriptor();
inline const ::std::string& IntervalType_Name(IntervalType value) {
  return ::google::protobuf::internal::NameOfEnum(
    IntervalType_descriptor(), value);
}
inline bool IntervalType_Parse(
    const ::std::string& name, IntervalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IntervalType>(
    IntervalType_descriptor(), name, value);
}
enum SelectionVectorType {
  SV_NONE = 0,
  SV_INT16 = 1,
  SV_INT32 = 2
};
bool SelectionVectorType_IsValid(int value);
const SelectionVectorType SelectionVectorType_MIN = SV_NONE;
const SelectionVectorType SelectionVectorType_MAX = SV_INT32;
const int SelectionVectorType_ARRAYSIZE = SelectionVectorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SelectionVectorType_descriptor();
inline const ::std::string& SelectionVectorType_Name(SelectionVectorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SelectionVectorType_descriptor(), value);
}
inline bool SelectionVectorType_Parse(
    const ::std::string& name, SelectionVectorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SelectionVectorType>(
    SelectionVectorType_descriptor(), name, value);
}
// ===================================================================

class ExtGandivaType :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.ExtGandivaType) */ {
 public:
  ExtGandivaType();
  virtual ~ExtGandivaType();

  ExtGandivaType(const ExtGandivaType& from);

  inline ExtGandivaType& operator=(const ExtGandivaType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtGandivaType(ExtGandivaType&& from) noexcept
    : ExtGandivaType() {
    *this = ::std::move(from);
  }

  inline ExtGandivaType& operator=(ExtGandivaType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExtGandivaType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtGandivaType* internal_default_instance() {
    return reinterpret_cast<const ExtGandivaType*>(
               &_ExtGandivaType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ExtGandivaType* other);
  friend void swap(ExtGandivaType& a, ExtGandivaType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtGandivaType* New() const final {
    return CreateMaybeMessage<ExtGandivaType>(nullptr);
  }

  ExtGandivaType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExtGandivaType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExtGandivaType& from);
  void MergeFrom(const ExtGandivaType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtGandivaType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string timeZone = 7;
  bool has_timezone() const;
  void clear_timezone();
  static const int kTimeZoneFieldNumber = 7;
  const ::std::string& timezone() const;
  void set_timezone(const ::std::string& value);
  #if LANG_CXX11
  void set_timezone(::std::string&& value);
  #endif
  void set_timezone(const char* value);
  void set_timezone(const char* value, size_t size);
  ::std::string* mutable_timezone();
  ::std::string* release_timezone();
  void set_allocated_timezone(::std::string* timezone);

  // optional .types_.GandivaType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::types_::GandivaType type() const;
  void set_type(::types_::GandivaType value);

  // optional uint32 width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional int32 precision = 3;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 3;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 scale = 4;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 4;
  ::google::protobuf::int32 scale() const;
  void set_scale(::google::protobuf::int32 value);

  // optional .types_.DateUnit dateUnit = 5;
  bool has_dateunit() const;
  void clear_dateunit();
  static const int kDateUnitFieldNumber = 5;
  ::types_::DateUnit dateunit() const;
  void set_dateunit(::types_::DateUnit value);

  // optional .types_.TimeUnit timeUnit = 6;
  bool has_timeunit() const;
  void clear_timeunit();
  static const int kTimeUnitFieldNumber = 6;
  ::types_::TimeUnit timeunit() const;
  void set_timeunit(::types_::TimeUnit value);

  // optional .types_.IntervalType intervalType = 8;
  bool has_intervaltype() const;
  void clear_intervaltype();
  static const int kIntervalTypeFieldNumber = 8;
  ::types_::IntervalType intervaltype() const;
  void set_intervaltype(::types_::IntervalType value);

  // @@protoc_insertion_point(class_scope:types_.ExtGandivaType)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr timezone_;
  int type_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 scale_;
  int dateunit_;
  int timeunit_;
  int intervaltype_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class Field :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.Field) */ {
 public:
  Field();
  virtual ~Field();

  Field(const Field& from);

  inline Field& operator=(const Field& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Field(Field&& from) noexcept
    : Field() {
    *this = ::std::move(from);
  }

  inline Field& operator=(Field&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Field& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Field* internal_default_instance() {
    return reinterpret_cast<const Field*>(
               &_Field_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Field* other);
  friend void swap(Field& a, Field& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Field* New() const final {
    return CreateMaybeMessage<Field>(nullptr);
  }

  Field* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Field>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Field& from);
  void MergeFrom(const Field& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.Field children = 4;
  int children_size() const;
  void clear_children();
  static const int kChildrenFieldNumber = 4;
  ::types_::Field* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::Field >*
      mutable_children();
  const ::types_::Field& children(int index) const;
  ::types_::Field* add_children();
  const ::google::protobuf::RepeatedPtrField< ::types_::Field >&
      children() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .types_.ExtGandivaType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::types_::ExtGandivaType& type() const;
  ::types_::ExtGandivaType* release_type();
  ::types_::ExtGandivaType* mutable_type();
  void set_allocated_type(::types_::ExtGandivaType* type);

  // optional bool nullable = 3;
  bool has_nullable() const;
  void clear_nullable();
  static const int kNullableFieldNumber = 3;
  bool nullable() const;
  void set_nullable(bool value);

  // @@protoc_insertion_point(class_scope:types_.Field)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::Field > children_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::types_::ExtGandivaType* type_;
  bool nullable_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class FieldNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.FieldNode) */ {
 public:
  FieldNode();
  virtual ~FieldNode();

  FieldNode(const FieldNode& from);

  inline FieldNode& operator=(const FieldNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldNode(FieldNode&& from) noexcept
    : FieldNode() {
    *this = ::std::move(from);
  }

  inline FieldNode& operator=(FieldNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FieldNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldNode* internal_default_instance() {
    return reinterpret_cast<const FieldNode*>(
               &_FieldNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(FieldNode* other);
  friend void swap(FieldNode& a, FieldNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldNode* New() const final {
    return CreateMaybeMessage<FieldNode>(nullptr);
  }

  FieldNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FieldNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FieldNode& from);
  void MergeFrom(const FieldNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.Field field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  const ::types_::Field& field() const;
  ::types_::Field* release_field();
  ::types_::Field* mutable_field();
  void set_allocated_field(::types_::Field* field);

  // @@protoc_insertion_point(class_scope:types_.FieldNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::Field* field_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class FunctionNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.FunctionNode) */ {
 public:
  FunctionNode();
  virtual ~FunctionNode();

  FunctionNode(const FunctionNode& from);

  inline FunctionNode& operator=(const FunctionNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionNode(FunctionNode&& from) noexcept
    : FunctionNode() {
    *this = ::std::move(from);
  }

  inline FunctionNode& operator=(FunctionNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FunctionNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionNode* internal_default_instance() {
    return reinterpret_cast<const FunctionNode*>(
               &_FunctionNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(FunctionNode* other);
  friend void swap(FunctionNode& a, FunctionNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionNode* New() const final {
    return CreateMaybeMessage<FunctionNode>(nullptr);
  }

  FunctionNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionNode& from);
  void MergeFrom(const FunctionNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.TreeNode inArgs = 2;
  int inargs_size() const;
  void clear_inargs();
  static const int kInArgsFieldNumber = 2;
  ::types_::TreeNode* mutable_inargs(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >*
      mutable_inargs();
  const ::types_::TreeNode& inargs(int index) const;
  ::types_::TreeNode* add_inargs();
  const ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >&
      inargs() const;

  // optional string functionName = 1;
  bool has_functionname() const;
  void clear_functionname();
  static const int kFunctionNameFieldNumber = 1;
  const ::std::string& functionname() const;
  void set_functionname(const ::std::string& value);
  #if LANG_CXX11
  void set_functionname(::std::string&& value);
  #endif
  void set_functionname(const char* value);
  void set_functionname(const char* value, size_t size);
  ::std::string* mutable_functionname();
  ::std::string* release_functionname();
  void set_allocated_functionname(::std::string* functionname);

  // optional .types_.ExtGandivaType returnType = 3;
  bool has_returntype() const;
  void clear_returntype();
  static const int kReturnTypeFieldNumber = 3;
  const ::types_::ExtGandivaType& returntype() const;
  ::types_::ExtGandivaType* release_returntype();
  ::types_::ExtGandivaType* mutable_returntype();
  void set_allocated_returntype(::types_::ExtGandivaType* returntype);

  // @@protoc_insertion_point(class_scope:types_.FunctionNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::TreeNode > inargs_;
  ::google::protobuf::internal::ArenaStringPtr functionname_;
  ::types_::ExtGandivaType* returntype_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class IfNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.IfNode) */ {
 public:
  IfNode();
  virtual ~IfNode();

  IfNode(const IfNode& from);

  inline IfNode& operator=(const IfNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IfNode(IfNode&& from) noexcept
    : IfNode() {
    *this = ::std::move(from);
  }

  inline IfNode& operator=(IfNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IfNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IfNode* internal_default_instance() {
    return reinterpret_cast<const IfNode*>(
               &_IfNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(IfNode* other);
  friend void swap(IfNode& a, IfNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IfNode* New() const final {
    return CreateMaybeMessage<IfNode>(nullptr);
  }

  IfNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IfNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IfNode& from);
  void MergeFrom(const IfNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IfNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.TreeNode cond = 1;
  bool has_cond() const;
  void clear_cond();
  static const int kCondFieldNumber = 1;
  const ::types_::TreeNode& cond() const;
  ::types_::TreeNode* release_cond();
  ::types_::TreeNode* mutable_cond();
  void set_allocated_cond(::types_::TreeNode* cond);

  // optional .types_.TreeNode thenNode = 2;
  bool has_thennode() const;
  void clear_thennode();
  static const int kThenNodeFieldNumber = 2;
  const ::types_::TreeNode& thennode() const;
  ::types_::TreeNode* release_thennode();
  ::types_::TreeNode* mutable_thennode();
  void set_allocated_thennode(::types_::TreeNode* thennode);

  // optional .types_.TreeNode elseNode = 3;
  bool has_elsenode() const;
  void clear_elsenode();
  static const int kElseNodeFieldNumber = 3;
  const ::types_::TreeNode& elsenode() const;
  ::types_::TreeNode* release_elsenode();
  ::types_::TreeNode* mutable_elsenode();
  void set_allocated_elsenode(::types_::TreeNode* elsenode);

  // optional .types_.ExtGandivaType returnType = 4;
  bool has_returntype() const;
  void clear_returntype();
  static const int kReturnTypeFieldNumber = 4;
  const ::types_::ExtGandivaType& returntype() const;
  ::types_::ExtGandivaType* release_returntype();
  ::types_::ExtGandivaType* mutable_returntype();
  void set_allocated_returntype(::types_::ExtGandivaType* returntype);

  // @@protoc_insertion_point(class_scope:types_.IfNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::TreeNode* cond_;
  ::types_::TreeNode* thennode_;
  ::types_::TreeNode* elsenode_;
  ::types_::ExtGandivaType* returntype_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class AndNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.AndNode) */ {
 public:
  AndNode();
  virtual ~AndNode();

  AndNode(const AndNode& from);

  inline AndNode& operator=(const AndNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AndNode(AndNode&& from) noexcept
    : AndNode() {
    *this = ::std::move(from);
  }

  inline AndNode& operator=(AndNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AndNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AndNode* internal_default_instance() {
    return reinterpret_cast<const AndNode*>(
               &_AndNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AndNode* other);
  friend void swap(AndNode& a, AndNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AndNode* New() const final {
    return CreateMaybeMessage<AndNode>(nullptr);
  }

  AndNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AndNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AndNode& from);
  void MergeFrom(const AndNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AndNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.TreeNode args = 1;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 1;
  ::types_::TreeNode* mutable_args(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >*
      mutable_args();
  const ::types_::TreeNode& args(int index) const;
  ::types_::TreeNode* add_args();
  const ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >&
      args() const;

  // @@protoc_insertion_point(class_scope:types_.AndNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::TreeNode > args_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class OrNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.OrNode) */ {
 public:
  OrNode();
  virtual ~OrNode();

  OrNode(const OrNode& from);

  inline OrNode& operator=(const OrNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrNode(OrNode&& from) noexcept
    : OrNode() {
    *this = ::std::move(from);
  }

  inline OrNode& operator=(OrNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OrNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrNode* internal_default_instance() {
    return reinterpret_cast<const OrNode*>(
               &_OrNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(OrNode* other);
  friend void swap(OrNode& a, OrNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrNode* New() const final {
    return CreateMaybeMessage<OrNode>(nullptr);
  }

  OrNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OrNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OrNode& from);
  void MergeFrom(const OrNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.TreeNode args = 1;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 1;
  ::types_::TreeNode* mutable_args(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >*
      mutable_args();
  const ::types_::TreeNode& args(int index) const;
  ::types_::TreeNode* add_args();
  const ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >&
      args() const;

  // @@protoc_insertion_point(class_scope:types_.OrNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::TreeNode > args_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class NullNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.NullNode) */ {
 public:
  NullNode();
  virtual ~NullNode();

  NullNode(const NullNode& from);

  inline NullNode& operator=(const NullNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NullNode(NullNode&& from) noexcept
    : NullNode() {
    *this = ::std::move(from);
  }

  inline NullNode& operator=(NullNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const NullNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NullNode* internal_default_instance() {
    return reinterpret_cast<const NullNode*>(
               &_NullNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(NullNode* other);
  friend void swap(NullNode& a, NullNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NullNode* New() const final {
    return CreateMaybeMessage<NullNode>(nullptr);
  }

  NullNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NullNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NullNode& from);
  void MergeFrom(const NullNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NullNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.ExtGandivaType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::types_::ExtGandivaType& type() const;
  ::types_::ExtGandivaType* release_type();
  ::types_::ExtGandivaType* mutable_type();
  void set_allocated_type(::types_::ExtGandivaType* type);

  // @@protoc_insertion_point(class_scope:types_.NullNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::ExtGandivaType* type_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class IntNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.IntNode) */ {
 public:
  IntNode();
  virtual ~IntNode();

  IntNode(const IntNode& from);

  inline IntNode& operator=(const IntNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntNode(IntNode&& from) noexcept
    : IntNode() {
    *this = ::std::move(from);
  }

  inline IntNode& operator=(IntNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IntNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntNode* internal_default_instance() {
    return reinterpret_cast<const IntNode*>(
               &_IntNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(IntNode* other);
  friend void swap(IntNode& a, IntNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntNode* New() const final {
    return CreateMaybeMessage<IntNode>(nullptr);
  }

  IntNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntNode& from);
  void MergeFrom(const IntNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:types_.IntNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class FloatNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.FloatNode) */ {
 public:
  FloatNode();
  virtual ~FloatNode();

  FloatNode(const FloatNode& from);

  inline FloatNode& operator=(const FloatNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatNode(FloatNode&& from) noexcept
    : FloatNode() {
    *this = ::std::move(from);
  }

  inline FloatNode& operator=(FloatNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FloatNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatNode* internal_default_instance() {
    return reinterpret_cast<const FloatNode*>(
               &_FloatNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(FloatNode* other);
  friend void swap(FloatNode& a, FloatNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatNode* New() const final {
    return CreateMaybeMessage<FloatNode>(nullptr);
  }

  FloatNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FloatNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FloatNode& from);
  void MergeFrom(const FloatNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:types_.FloatNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class DoubleNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.DoubleNode) */ {
 public:
  DoubleNode();
  virtual ~DoubleNode();

  DoubleNode(const DoubleNode& from);

  inline DoubleNode& operator=(const DoubleNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoubleNode(DoubleNode&& from) noexcept
    : DoubleNode() {
    *this = ::std::move(from);
  }

  inline DoubleNode& operator=(DoubleNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DoubleNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleNode* internal_default_instance() {
    return reinterpret_cast<const DoubleNode*>(
               &_DoubleNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(DoubleNode* other);
  friend void swap(DoubleNode& a, DoubleNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleNode* New() const final {
    return CreateMaybeMessage<DoubleNode>(nullptr);
  }

  DoubleNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DoubleNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DoubleNode& from);
  void MergeFrom(const DoubleNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:types_.DoubleNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class BooleanNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.BooleanNode) */ {
 public:
  BooleanNode();
  virtual ~BooleanNode();

  BooleanNode(const BooleanNode& from);

  inline BooleanNode& operator=(const BooleanNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BooleanNode(BooleanNode&& from) noexcept
    : BooleanNode() {
    *this = ::std::move(from);
  }

  inline BooleanNode& operator=(BooleanNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BooleanNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BooleanNode* internal_default_instance() {
    return reinterpret_cast<const BooleanNode*>(
               &_BooleanNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(BooleanNode* other);
  friend void swap(BooleanNode& a, BooleanNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BooleanNode* New() const final {
    return CreateMaybeMessage<BooleanNode>(nullptr);
  }

  BooleanNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BooleanNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BooleanNode& from);
  void MergeFrom(const BooleanNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BooleanNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:types_.BooleanNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  bool value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class LongNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.LongNode) */ {
 public:
  LongNode();
  virtual ~LongNode();

  LongNode(const LongNode& from);

  inline LongNode& operator=(const LongNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LongNode(LongNode&& from) noexcept
    : LongNode() {
    *this = ::std::move(from);
  }

  inline LongNode& operator=(LongNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LongNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LongNode* internal_default_instance() {
    return reinterpret_cast<const LongNode*>(
               &_LongNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(LongNode* other);
  friend void swap(LongNode& a, LongNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LongNode* New() const final {
    return CreateMaybeMessage<LongNode>(nullptr);
  }

  LongNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LongNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LongNode& from);
  void MergeFrom(const LongNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:types_.LongNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class StringNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.StringNode) */ {
 public:
  StringNode();
  virtual ~StringNode();

  StringNode(const StringNode& from);

  inline StringNode& operator=(const StringNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringNode(StringNode&& from) noexcept
    : StringNode() {
    *this = ::std::move(from);
  }

  inline StringNode& operator=(StringNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringNode* internal_default_instance() {
    return reinterpret_cast<const StringNode*>(
               &_StringNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(StringNode* other);
  friend void swap(StringNode& a, StringNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringNode* New() const final {
    return CreateMaybeMessage<StringNode>(nullptr);
  }

  StringNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringNode& from);
  void MergeFrom(const StringNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:types_.StringNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class BinaryNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.BinaryNode) */ {
 public:
  BinaryNode();
  virtual ~BinaryNode();

  BinaryNode(const BinaryNode& from);

  inline BinaryNode& operator=(const BinaryNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BinaryNode(BinaryNode&& from) noexcept
    : BinaryNode() {
    *this = ::std::move(from);
  }

  inline BinaryNode& operator=(BinaryNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BinaryNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BinaryNode* internal_default_instance() {
    return reinterpret_cast<const BinaryNode*>(
               &_BinaryNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(BinaryNode* other);
  friend void swap(BinaryNode& a, BinaryNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BinaryNode* New() const final {
    return CreateMaybeMessage<BinaryNode>(nullptr);
  }

  BinaryNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BinaryNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BinaryNode& from);
  void MergeFrom(const BinaryNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BinaryNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:types_.BinaryNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class DecimalNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.DecimalNode) */ {
 public:
  DecimalNode();
  virtual ~DecimalNode();

  DecimalNode(const DecimalNode& from);

  inline DecimalNode& operator=(const DecimalNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DecimalNode(DecimalNode&& from) noexcept
    : DecimalNode() {
    *this = ::std::move(from);
  }

  inline DecimalNode& operator=(DecimalNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DecimalNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecimalNode* internal_default_instance() {
    return reinterpret_cast<const DecimalNode*>(
               &_DecimalNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(DecimalNode* other);
  friend void swap(DecimalNode& a, DecimalNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DecimalNode* New() const final {
    return CreateMaybeMessage<DecimalNode>(nullptr);
  }

  DecimalNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DecimalNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DecimalNode& from);
  void MergeFrom(const DecimalNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecimalNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int32 precision = 2;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 2;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 scale = 3;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  ::google::protobuf::int32 scale() const;
  void set_scale(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:types_.DecimalNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 scale_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class TreeNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.TreeNode) */ {
 public:
  TreeNode();
  virtual ~TreeNode();

  TreeNode(const TreeNode& from);

  inline TreeNode& operator=(const TreeNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TreeNode(TreeNode&& from) noexcept
    : TreeNode() {
    *this = ::std::move(from);
  }

  inline TreeNode& operator=(TreeNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TreeNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TreeNode* internal_default_instance() {
    return reinterpret_cast<const TreeNode*>(
               &_TreeNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(TreeNode* other);
  friend void swap(TreeNode& a, TreeNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TreeNode* New() const final {
    return CreateMaybeMessage<TreeNode>(nullptr);
  }

  TreeNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TreeNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TreeNode& from);
  void MergeFrom(const TreeNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TreeNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.FieldNode fieldNode = 1;
  bool has_fieldnode() const;
  void clear_fieldnode();
  static const int kFieldNodeFieldNumber = 1;
  const ::types_::FieldNode& fieldnode() const;
  ::types_::FieldNode* release_fieldnode();
  ::types_::FieldNode* mutable_fieldnode();
  void set_allocated_fieldnode(::types_::FieldNode* fieldnode);

  // optional .types_.FunctionNode fnNode = 2;
  bool has_fnnode() const;
  void clear_fnnode();
  static const int kFnNodeFieldNumber = 2;
  const ::types_::FunctionNode& fnnode() const;
  ::types_::FunctionNode* release_fnnode();
  ::types_::FunctionNode* mutable_fnnode();
  void set_allocated_fnnode(::types_::FunctionNode* fnnode);

  // optional .types_.IfNode ifNode = 6;
  bool has_ifnode() const;
  void clear_ifnode();
  static const int kIfNodeFieldNumber = 6;
  const ::types_::IfNode& ifnode() const;
  ::types_::IfNode* release_ifnode();
  ::types_::IfNode* mutable_ifnode();
  void set_allocated_ifnode(::types_::IfNode* ifnode);

  // optional .types_.AndNode andNode = 7;
  bool has_andnode() const;
  void clear_andnode();
  static const int kAndNodeFieldNumber = 7;
  const ::types_::AndNode& andnode() const;
  ::types_::AndNode* release_andnode();
  ::types_::AndNode* mutable_andnode();
  void set_allocated_andnode(::types_::AndNode* andnode);

  // optional .types_.OrNode orNode = 8;
  bool has_ornode() const;
  void clear_ornode();
  static const int kOrNodeFieldNumber = 8;
  const ::types_::OrNode& ornode() const;
  ::types_::OrNode* release_ornode();
  ::types_::OrNode* mutable_ornode();
  void set_allocated_ornode(::types_::OrNode* ornode);

  // optional .types_.NullNode nullNode = 11;
  bool has_nullnode() const;
  void clear_nullnode();
  static const int kNullNodeFieldNumber = 11;
  const ::types_::NullNode& nullnode() const;
  ::types_::NullNode* release_nullnode();
  ::types_::NullNode* mutable_nullnode();
  void set_allocated_nullnode(::types_::NullNode* nullnode);

  // optional .types_.IntNode intNode = 12;
  bool has_intnode() const;
  void clear_intnode();
  static const int kIntNodeFieldNumber = 12;
  const ::types_::IntNode& intnode() const;
  ::types_::IntNode* release_intnode();
  ::types_::IntNode* mutable_intnode();
  void set_allocated_intnode(::types_::IntNode* intnode);

  // optional .types_.FloatNode floatNode = 13;
  bool has_floatnode() const;
  void clear_floatnode();
  static const int kFloatNodeFieldNumber = 13;
  const ::types_::FloatNode& floatnode() const;
  ::types_::FloatNode* release_floatnode();
  ::types_::FloatNode* mutable_floatnode();
  void set_allocated_floatnode(::types_::FloatNode* floatnode);

  // optional .types_.LongNode longNode = 14;
  bool has_longnode() const;
  void clear_longnode();
  static const int kLongNodeFieldNumber = 14;
  const ::types_::LongNode& longnode() const;
  ::types_::LongNode* release_longnode();
  ::types_::LongNode* mutable_longnode();
  void set_allocated_longnode(::types_::LongNode* longnode);

  // optional .types_.BooleanNode booleanNode = 15;
  bool has_booleannode() const;
  void clear_booleannode();
  static const int kBooleanNodeFieldNumber = 15;
  const ::types_::BooleanNode& booleannode() const;
  ::types_::BooleanNode* release_booleannode();
  ::types_::BooleanNode* mutable_booleannode();
  void set_allocated_booleannode(::types_::BooleanNode* booleannode);

  // optional .types_.DoubleNode doubleNode = 16;
  bool has_doublenode() const;
  void clear_doublenode();
  static const int kDoubleNodeFieldNumber = 16;
  const ::types_::DoubleNode& doublenode() const;
  ::types_::DoubleNode* release_doublenode();
  ::types_::DoubleNode* mutable_doublenode();
  void set_allocated_doublenode(::types_::DoubleNode* doublenode);

  // optional .types_.StringNode stringNode = 17;
  bool has_stringnode() const;
  void clear_stringnode();
  static const int kStringNodeFieldNumber = 17;
  const ::types_::StringNode& stringnode() const;
  ::types_::StringNode* release_stringnode();
  ::types_::StringNode* mutable_stringnode();
  void set_allocated_stringnode(::types_::StringNode* stringnode);

  // optional .types_.BinaryNode binaryNode = 18;
  bool has_binarynode() const;
  void clear_binarynode();
  static const int kBinaryNodeFieldNumber = 18;
  const ::types_::BinaryNode& binarynode() const;
  ::types_::BinaryNode* release_binarynode();
  ::types_::BinaryNode* mutable_binarynode();
  void set_allocated_binarynode(::types_::BinaryNode* binarynode);

  // optional .types_.DecimalNode decimalNode = 19;
  bool has_decimalnode() const;
  void clear_decimalnode();
  static const int kDecimalNodeFieldNumber = 19;
  const ::types_::DecimalNode& decimalnode() const;
  ::types_::DecimalNode* release_decimalnode();
  ::types_::DecimalNode* mutable_decimalnode();
  void set_allocated_decimalnode(::types_::DecimalNode* decimalnode);

  // optional .types_.InNode inNode = 21;
  bool has_innode() const;
  void clear_innode();
  static const int kInNodeFieldNumber = 21;
  const ::types_::InNode& innode() const;
  ::types_::InNode* release_innode();
  ::types_::InNode* mutable_innode();
  void set_allocated_innode(::types_::InNode* innode);

  // @@protoc_insertion_point(class_scope:types_.TreeNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::FieldNode* fieldnode_;
  ::types_::FunctionNode* fnnode_;
  ::types_::IfNode* ifnode_;
  ::types_::AndNode* andnode_;
  ::types_::OrNode* ornode_;
  ::types_::NullNode* nullnode_;
  ::types_::IntNode* intnode_;
  ::types_::FloatNode* floatnode_;
  ::types_::LongNode* longnode_;
  ::types_::BooleanNode* booleannode_;
  ::types_::DoubleNode* doublenode_;
  ::types_::StringNode* stringnode_;
  ::types_::BinaryNode* binarynode_;
  ::types_::DecimalNode* decimalnode_;
  ::types_::InNode* innode_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class ExpressionRoot :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.ExpressionRoot) */ {
 public:
  ExpressionRoot();
  virtual ~ExpressionRoot();

  ExpressionRoot(const ExpressionRoot& from);

  inline ExpressionRoot& operator=(const ExpressionRoot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExpressionRoot(ExpressionRoot&& from) noexcept
    : ExpressionRoot() {
    *this = ::std::move(from);
  }

  inline ExpressionRoot& operator=(ExpressionRoot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExpressionRoot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpressionRoot* internal_default_instance() {
    return reinterpret_cast<const ExpressionRoot*>(
               &_ExpressionRoot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ExpressionRoot* other);
  friend void swap(ExpressionRoot& a, ExpressionRoot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExpressionRoot* New() const final {
    return CreateMaybeMessage<ExpressionRoot>(nullptr);
  }

  ExpressionRoot* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExpressionRoot>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExpressionRoot& from);
  void MergeFrom(const ExpressionRoot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpressionRoot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.TreeNode root = 1;
  bool has_root() const;
  void clear_root();
  static const int kRootFieldNumber = 1;
  const ::types_::TreeNode& root() const;
  ::types_::TreeNode* release_root();
  ::types_::TreeNode* mutable_root();
  void set_allocated_root(::types_::TreeNode* root);

  // optional .types_.Field resultType = 2;
  bool has_resulttype() const;
  void clear_resulttype();
  static const int kResultTypeFieldNumber = 2;
  const ::types_::Field& resulttype() const;
  ::types_::Field* release_resulttype();
  ::types_::Field* mutable_resulttype();
  void set_allocated_resulttype(::types_::Field* resulttype);

  // @@protoc_insertion_point(class_scope:types_.ExpressionRoot)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::TreeNode* root_;
  ::types_::Field* resulttype_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class ExpressionList :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.ExpressionList) */ {
 public:
  ExpressionList();
  virtual ~ExpressionList();

  ExpressionList(const ExpressionList& from);

  inline ExpressionList& operator=(const ExpressionList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExpressionList(ExpressionList&& from) noexcept
    : ExpressionList() {
    *this = ::std::move(from);
  }

  inline ExpressionList& operator=(ExpressionList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExpressionList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpressionList* internal_default_instance() {
    return reinterpret_cast<const ExpressionList*>(
               &_ExpressionList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ExpressionList* other);
  friend void swap(ExpressionList& a, ExpressionList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExpressionList* New() const final {
    return CreateMaybeMessage<ExpressionList>(nullptr);
  }

  ExpressionList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExpressionList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExpressionList& from);
  void MergeFrom(const ExpressionList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpressionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.ExpressionRoot exprs = 2;
  int exprs_size() const;
  void clear_exprs();
  static const int kExprsFieldNumber = 2;
  ::types_::ExpressionRoot* mutable_exprs(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::ExpressionRoot >*
      mutable_exprs();
  const ::types_::ExpressionRoot& exprs(int index) const;
  ::types_::ExpressionRoot* add_exprs();
  const ::google::protobuf::RepeatedPtrField< ::types_::ExpressionRoot >&
      exprs() const;

  // @@protoc_insertion_point(class_scope:types_.ExpressionList)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::ExpressionRoot > exprs_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class Condition :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.Condition) */ {
 public:
  Condition();
  virtual ~Condition();

  Condition(const Condition& from);

  inline Condition& operator=(const Condition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Condition(Condition&& from) noexcept
    : Condition() {
    *this = ::std::move(from);
  }

  inline Condition& operator=(Condition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Condition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Condition* internal_default_instance() {
    return reinterpret_cast<const Condition*>(
               &_Condition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(Condition* other);
  friend void swap(Condition& a, Condition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Condition* New() const final {
    return CreateMaybeMessage<Condition>(nullptr);
  }

  Condition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Condition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Condition& from);
  void MergeFrom(const Condition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Condition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.TreeNode root = 1;
  bool has_root() const;
  void clear_root();
  static const int kRootFieldNumber = 1;
  const ::types_::TreeNode& root() const;
  ::types_::TreeNode* release_root();
  ::types_::TreeNode* mutable_root();
  void set_allocated_root(::types_::TreeNode* root);

  // @@protoc_insertion_point(class_scope:types_.Condition)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::TreeNode* root_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class Schema :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.Schema) */ {
 public:
  Schema();
  virtual ~Schema();

  Schema(const Schema& from);

  inline Schema& operator=(const Schema& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Schema(Schema&& from) noexcept
    : Schema() {
    *this = ::std::move(from);
  }

  inline Schema& operator=(Schema&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Schema& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Schema* internal_default_instance() {
    return reinterpret_cast<const Schema*>(
               &_Schema_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(Schema* other);
  friend void swap(Schema& a, Schema& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Schema* New() const final {
    return CreateMaybeMessage<Schema>(nullptr);
  }

  Schema* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Schema>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Schema& from);
  void MergeFrom(const Schema& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Schema* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.Field columns = 1;
  int columns_size() const;
  void clear_columns();
  static const int kColumnsFieldNumber = 1;
  ::types_::Field* mutable_columns(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::Field >*
      mutable_columns();
  const ::types_::Field& columns(int index) const;
  ::types_::Field* add_columns();
  const ::google::protobuf::RepeatedPtrField< ::types_::Field >&
      columns() const;

  // @@protoc_insertion_point(class_scope:types_.Schema)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::Field > columns_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class GandivaDataTypes :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.GandivaDataTypes) */ {
 public:
  GandivaDataTypes();
  virtual ~GandivaDataTypes();

  GandivaDataTypes(const GandivaDataTypes& from);

  inline GandivaDataTypes& operator=(const GandivaDataTypes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GandivaDataTypes(GandivaDataTypes&& from) noexcept
    : GandivaDataTypes() {
    *this = ::std::move(from);
  }

  inline GandivaDataTypes& operator=(GandivaDataTypes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GandivaDataTypes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GandivaDataTypes* internal_default_instance() {
    return reinterpret_cast<const GandivaDataTypes*>(
               &_GandivaDataTypes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(GandivaDataTypes* other);
  friend void swap(GandivaDataTypes& a, GandivaDataTypes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GandivaDataTypes* New() const final {
    return CreateMaybeMessage<GandivaDataTypes>(nullptr);
  }

  GandivaDataTypes* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GandivaDataTypes>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GandivaDataTypes& from);
  void MergeFrom(const GandivaDataTypes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GandivaDataTypes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.ExtGandivaType dataType = 1;
  int datatype_size() const;
  void clear_datatype();
  static const int kDataTypeFieldNumber = 1;
  ::types_::ExtGandivaType* mutable_datatype(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >*
      mutable_datatype();
  const ::types_::ExtGandivaType& datatype(int index) const;
  ::types_::ExtGandivaType* add_datatype();
  const ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >&
      datatype() const;

  // @@protoc_insertion_point(class_scope:types_.GandivaDataTypes)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType > datatype_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class GandivaFunctions :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.GandivaFunctions) */ {
 public:
  GandivaFunctions();
  virtual ~GandivaFunctions();

  GandivaFunctions(const GandivaFunctions& from);

  inline GandivaFunctions& operator=(const GandivaFunctions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GandivaFunctions(GandivaFunctions&& from) noexcept
    : GandivaFunctions() {
    *this = ::std::move(from);
  }

  inline GandivaFunctions& operator=(GandivaFunctions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GandivaFunctions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GandivaFunctions* internal_default_instance() {
    return reinterpret_cast<const GandivaFunctions*>(
               &_GandivaFunctions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(GandivaFunctions* other);
  friend void swap(GandivaFunctions& a, GandivaFunctions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GandivaFunctions* New() const final {
    return CreateMaybeMessage<GandivaFunctions>(nullptr);
  }

  GandivaFunctions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GandivaFunctions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GandivaFunctions& from);
  void MergeFrom(const GandivaFunctions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GandivaFunctions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.FunctionSignature function = 1;
  int function_size() const;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  ::types_::FunctionSignature* mutable_function(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::FunctionSignature >*
      mutable_function();
  const ::types_::FunctionSignature& function(int index) const;
  ::types_::FunctionSignature* add_function();
  const ::google::protobuf::RepeatedPtrField< ::types_::FunctionSignature >&
      function() const;

  // @@protoc_insertion_point(class_scope:types_.GandivaFunctions)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::FunctionSignature > function_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class FunctionSignature :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.FunctionSignature) */ {
 public:
  FunctionSignature();
  virtual ~FunctionSignature();

  FunctionSignature(const FunctionSignature& from);

  inline FunctionSignature& operator=(const FunctionSignature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature(FunctionSignature&& from) noexcept
    : FunctionSignature() {
    *this = ::std::move(from);
  }

  inline FunctionSignature& operator=(FunctionSignature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FunctionSignature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature*>(
               &_FunctionSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(FunctionSignature* other);
  friend void swap(FunctionSignature& a, FunctionSignature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature* New() const final {
    return CreateMaybeMessage<FunctionSignature>(nullptr);
  }

  FunctionSignature* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature& from);
  void MergeFrom(const FunctionSignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.ExtGandivaType paramTypes = 3;
  int paramtypes_size() const;
  void clear_paramtypes();
  static const int kParamTypesFieldNumber = 3;
  ::types_::ExtGandivaType* mutable_paramtypes(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >*
      mutable_paramtypes();
  const ::types_::ExtGandivaType& paramtypes(int index) const;
  ::types_::ExtGandivaType* add_paramtypes();
  const ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >&
      paramtypes() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .types_.ExtGandivaType returnType = 2;
  bool has_returntype() const;
  void clear_returntype();
  static const int kReturnTypeFieldNumber = 2;
  const ::types_::ExtGandivaType& returntype() const;
  ::types_::ExtGandivaType* release_returntype();
  ::types_::ExtGandivaType* mutable_returntype();
  void set_allocated_returntype(::types_::ExtGandivaType* returntype);

  // @@protoc_insertion_point(class_scope:types_.FunctionSignature)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType > paramtypes_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::types_::ExtGandivaType* returntype_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class InNode :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.InNode) */ {
 public:
  InNode();
  virtual ~InNode();

  InNode(const InNode& from);

  inline InNode& operator=(const InNode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InNode(InNode&& from) noexcept
    : InNode() {
    *this = ::std::move(from);
  }

  inline InNode& operator=(InNode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InNode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InNode* internal_default_instance() {
    return reinterpret_cast<const InNode*>(
               &_InNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(InNode* other);
  friend void swap(InNode& a, InNode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InNode* New() const final {
    return CreateMaybeMessage<InNode>(nullptr);
  }

  InNode* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InNode>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InNode& from);
  void MergeFrom(const InNode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .types_.FieldNode field = 1;
  bool has_field() const;
  void clear_field();
  static const int kFieldFieldNumber = 1;
  const ::types_::FieldNode& field() const;
  ::types_::FieldNode* release_field();
  ::types_::FieldNode* mutable_field();
  void set_allocated_field(::types_::FieldNode* field);

  // optional .types_.IntConstants intValues = 2;
  bool has_intvalues() const;
  void clear_intvalues();
  static const int kIntValuesFieldNumber = 2;
  const ::types_::IntConstants& intvalues() const;
  ::types_::IntConstants* release_intvalues();
  ::types_::IntConstants* mutable_intvalues();
  void set_allocated_intvalues(::types_::IntConstants* intvalues);

  // optional .types_.LongConstants longValues = 3;
  bool has_longvalues() const;
  void clear_longvalues();
  static const int kLongValuesFieldNumber = 3;
  const ::types_::LongConstants& longvalues() const;
  ::types_::LongConstants* release_longvalues();
  ::types_::LongConstants* mutable_longvalues();
  void set_allocated_longvalues(::types_::LongConstants* longvalues);

  // optional .types_.StringConstants stringValues = 4;
  bool has_stringvalues() const;
  void clear_stringvalues();
  static const int kStringValuesFieldNumber = 4;
  const ::types_::StringConstants& stringvalues() const;
  ::types_::StringConstants* release_stringvalues();
  ::types_::StringConstants* mutable_stringvalues();
  void set_allocated_stringvalues(::types_::StringConstants* stringvalues);

  // optional .types_.BinaryConstants binaryValues = 5;
  bool has_binaryvalues() const;
  void clear_binaryvalues();
  static const int kBinaryValuesFieldNumber = 5;
  const ::types_::BinaryConstants& binaryvalues() const;
  ::types_::BinaryConstants* release_binaryvalues();
  ::types_::BinaryConstants* mutable_binaryvalues();
  void set_allocated_binaryvalues(::types_::BinaryConstants* binaryvalues);

  // @@protoc_insertion_point(class_scope:types_.InNode)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::types_::FieldNode* field_;
  ::types_::IntConstants* intvalues_;
  ::types_::LongConstants* longvalues_;
  ::types_::StringConstants* stringvalues_;
  ::types_::BinaryConstants* binaryvalues_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class IntConstants :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.IntConstants) */ {
 public:
  IntConstants();
  virtual ~IntConstants();

  IntConstants(const IntConstants& from);

  inline IntConstants& operator=(const IntConstants& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntConstants(IntConstants&& from) noexcept
    : IntConstants() {
    *this = ::std::move(from);
  }

  inline IntConstants& operator=(IntConstants&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const IntConstants& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntConstants* internal_default_instance() {
    return reinterpret_cast<const IntConstants*>(
               &_IntConstants_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(IntConstants* other);
  friend void swap(IntConstants& a, IntConstants& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntConstants* New() const final {
    return CreateMaybeMessage<IntConstants>(nullptr);
  }

  IntConstants* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntConstants>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntConstants& from);
  void MergeFrom(const IntConstants& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntConstants* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.IntNode intValues = 1;
  int intvalues_size() const;
  void clear_intvalues();
  static const int kIntValuesFieldNumber = 1;
  ::types_::IntNode* mutable_intvalues(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::IntNode >*
      mutable_intvalues();
  const ::types_::IntNode& intvalues(int index) const;
  ::types_::IntNode* add_intvalues();
  const ::google::protobuf::RepeatedPtrField< ::types_::IntNode >&
      intvalues() const;

  // @@protoc_insertion_point(class_scope:types_.IntConstants)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::IntNode > intvalues_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class LongConstants :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.LongConstants) */ {
 public:
  LongConstants();
  virtual ~LongConstants();

  LongConstants(const LongConstants& from);

  inline LongConstants& operator=(const LongConstants& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LongConstants(LongConstants&& from) noexcept
    : LongConstants() {
    *this = ::std::move(from);
  }

  inline LongConstants& operator=(LongConstants&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LongConstants& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LongConstants* internal_default_instance() {
    return reinterpret_cast<const LongConstants*>(
               &_LongConstants_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(LongConstants* other);
  friend void swap(LongConstants& a, LongConstants& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LongConstants* New() const final {
    return CreateMaybeMessage<LongConstants>(nullptr);
  }

  LongConstants* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LongConstants>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LongConstants& from);
  void MergeFrom(const LongConstants& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LongConstants* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.LongNode longValues = 1;
  int longvalues_size() const;
  void clear_longvalues();
  static const int kLongValuesFieldNumber = 1;
  ::types_::LongNode* mutable_longvalues(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::LongNode >*
      mutable_longvalues();
  const ::types_::LongNode& longvalues(int index) const;
  ::types_::LongNode* add_longvalues();
  const ::google::protobuf::RepeatedPtrField< ::types_::LongNode >&
      longvalues() const;

  // @@protoc_insertion_point(class_scope:types_.LongConstants)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::LongNode > longvalues_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class StringConstants :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.StringConstants) */ {
 public:
  StringConstants();
  virtual ~StringConstants();

  StringConstants(const StringConstants& from);

  inline StringConstants& operator=(const StringConstants& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringConstants(StringConstants&& from) noexcept
    : StringConstants() {
    *this = ::std::move(from);
  }

  inline StringConstants& operator=(StringConstants&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const StringConstants& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringConstants* internal_default_instance() {
    return reinterpret_cast<const StringConstants*>(
               &_StringConstants_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(StringConstants* other);
  friend void swap(StringConstants& a, StringConstants& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringConstants* New() const final {
    return CreateMaybeMessage<StringConstants>(nullptr);
  }

  StringConstants* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringConstants>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringConstants& from);
  void MergeFrom(const StringConstants& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringConstants* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.StringNode stringValues = 1;
  int stringvalues_size() const;
  void clear_stringvalues();
  static const int kStringValuesFieldNumber = 1;
  ::types_::StringNode* mutable_stringvalues(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::StringNode >*
      mutable_stringvalues();
  const ::types_::StringNode& stringvalues(int index) const;
  ::types_::StringNode* add_stringvalues();
  const ::google::protobuf::RepeatedPtrField< ::types_::StringNode >&
      stringvalues() const;

  // @@protoc_insertion_point(class_scope:types_.StringConstants)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::StringNode > stringvalues_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// -------------------------------------------------------------------

class BinaryConstants :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:types_.BinaryConstants) */ {
 public:
  BinaryConstants();
  virtual ~BinaryConstants();

  BinaryConstants(const BinaryConstants& from);

  inline BinaryConstants& operator=(const BinaryConstants& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BinaryConstants(BinaryConstants&& from) noexcept
    : BinaryConstants() {
    *this = ::std::move(from);
  }

  inline BinaryConstants& operator=(BinaryConstants&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BinaryConstants& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BinaryConstants* internal_default_instance() {
    return reinterpret_cast<const BinaryConstants*>(
               &_BinaryConstants_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(BinaryConstants* other);
  friend void swap(BinaryConstants& a, BinaryConstants& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BinaryConstants* New() const final {
    return CreateMaybeMessage<BinaryConstants>(nullptr);
  }

  BinaryConstants* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BinaryConstants>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BinaryConstants& from);
  void MergeFrom(const BinaryConstants& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BinaryConstants* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .types_.BinaryNode binaryValues = 1;
  int binaryvalues_size() const;
  void clear_binaryvalues();
  static const int kBinaryValuesFieldNumber = 1;
  ::types_::BinaryNode* mutable_binaryvalues(int index);
  ::google::protobuf::RepeatedPtrField< ::types_::BinaryNode >*
      mutable_binaryvalues();
  const ::types_::BinaryNode& binaryvalues(int index) const;
  ::types_::BinaryNode* add_binaryvalues();
  const ::google::protobuf::RepeatedPtrField< ::types_::BinaryNode >&
      binaryvalues() const;

  // @@protoc_insertion_point(class_scope:types_.BinaryConstants)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::types_::BinaryNode > binaryvalues_;
  friend struct ::TableStruct_Types_5f_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExtGandivaType

// optional .types_.GandivaType type = 1;
inline bool ExtGandivaType::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtGandivaType::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::types_::GandivaType ExtGandivaType::type() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.type)
  return static_cast< ::types_::GandivaType >(type_);
}
inline void ExtGandivaType::set_type(::types_::GandivaType value) {
  assert(::types_::GandivaType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.type)
}

// optional uint32 width = 2;
inline bool ExtGandivaType::has_width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExtGandivaType::clear_width() {
  width_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::uint32 ExtGandivaType::width() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.width)
  return width_;
}
inline void ExtGandivaType::set_width(::google::protobuf::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  width_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.width)
}

// optional int32 precision = 3;
inline bool ExtGandivaType::has_precision() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExtGandivaType::clear_precision() {
  precision_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int32 ExtGandivaType::precision() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.precision)
  return precision_;
}
inline void ExtGandivaType::set_precision(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  precision_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.precision)
}

// optional int32 scale = 4;
inline bool ExtGandivaType::has_scale() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExtGandivaType::clear_scale() {
  scale_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int32 ExtGandivaType::scale() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.scale)
  return scale_;
}
inline void ExtGandivaType::set_scale(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  scale_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.scale)
}

// optional .types_.DateUnit dateUnit = 5;
inline bool ExtGandivaType::has_dateunit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExtGandivaType::clear_dateunit() {
  dateunit_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::types_::DateUnit ExtGandivaType::dateunit() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.dateUnit)
  return static_cast< ::types_::DateUnit >(dateunit_);
}
inline void ExtGandivaType::set_dateunit(::types_::DateUnit value) {
  assert(::types_::DateUnit_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  dateunit_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.dateUnit)
}

// optional .types_.TimeUnit timeUnit = 6;
inline bool ExtGandivaType::has_timeunit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ExtGandivaType::clear_timeunit() {
  timeunit_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::types_::TimeUnit ExtGandivaType::timeunit() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.timeUnit)
  return static_cast< ::types_::TimeUnit >(timeunit_);
}
inline void ExtGandivaType::set_timeunit(::types_::TimeUnit value) {
  assert(::types_::TimeUnit_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  timeunit_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.timeUnit)
}

// optional string timeZone = 7;
inline bool ExtGandivaType::has_timezone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtGandivaType::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ExtGandivaType::timezone() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.timeZone)
  return timezone_.GetNoArena();
}
inline void ExtGandivaType::set_timezone(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.timeZone)
}
#if LANG_CXX11
inline void ExtGandivaType::set_timezone(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.ExtGandivaType.timeZone)
}
#endif
inline void ExtGandivaType::set_timezone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.ExtGandivaType.timeZone)
}
inline void ExtGandivaType::set_timezone(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.ExtGandivaType.timeZone)
}
inline ::std::string* ExtGandivaType::mutable_timezone() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.ExtGandivaType.timeZone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtGandivaType::release_timezone() {
  // @@protoc_insertion_point(field_release:types_.ExtGandivaType.timeZone)
  if (!has_timezone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return timezone_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtGandivaType::set_allocated_timezone(::std::string* timezone) {
  if (timezone != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:types_.ExtGandivaType.timeZone)
}

// optional .types_.IntervalType intervalType = 8;
inline bool ExtGandivaType::has_intervaltype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ExtGandivaType::clear_intervaltype() {
  intervaltype_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::types_::IntervalType ExtGandivaType::intervaltype() const {
  // @@protoc_insertion_point(field_get:types_.ExtGandivaType.intervalType)
  return static_cast< ::types_::IntervalType >(intervaltype_);
}
inline void ExtGandivaType::set_intervaltype(::types_::IntervalType value) {
  assert(::types_::IntervalType_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  intervaltype_ = value;
  // @@protoc_insertion_point(field_set:types_.ExtGandivaType.intervalType)
}

// -------------------------------------------------------------------

// Field

// optional string name = 1;
inline bool Field::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Field::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Field::name() const {
  // @@protoc_insertion_point(field_get:types_.Field.name)
  return name_.GetNoArena();
}
inline void Field::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.Field.name)
}
#if LANG_CXX11
inline void Field::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.Field.name)
}
#endif
inline void Field::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.Field.name)
}
inline void Field::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.Field.name)
}
inline ::std::string* Field::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.Field.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Field::release_name() {
  // @@protoc_insertion_point(field_release:types_.Field.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Field::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:types_.Field.name)
}

// optional .types_.ExtGandivaType type = 2;
inline bool Field::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Field::clear_type() {
  if (type_ != nullptr) type_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::ExtGandivaType& Field::type() const {
  const ::types_::ExtGandivaType* p = type_;
  // @@protoc_insertion_point(field_get:types_.Field.type)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::ExtGandivaType*>(
      &::types_::_ExtGandivaType_default_instance_);
}
inline ::types_::ExtGandivaType* Field::release_type() {
  // @@protoc_insertion_point(field_release:types_.Field.type)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::ExtGandivaType* temp = type_;
  type_ = nullptr;
  return temp;
}
inline ::types_::ExtGandivaType* Field::mutable_type() {
  _has_bits_[0] |= 0x00000002u;
  if (type_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::ExtGandivaType>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.Field.type)
  return type_;
}
inline void Field::set_allocated_type(::types_::ExtGandivaType* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete type_;
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:types_.Field.type)
}

// optional bool nullable = 3;
inline bool Field::has_nullable() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Field::clear_nullable() {
  nullable_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool Field::nullable() const {
  // @@protoc_insertion_point(field_get:types_.Field.nullable)
  return nullable_;
}
inline void Field::set_nullable(bool value) {
  _has_bits_[0] |= 0x00000004u;
  nullable_ = value;
  // @@protoc_insertion_point(field_set:types_.Field.nullable)
}

// repeated .types_.Field children = 4;
inline int Field::children_size() const {
  return children_.size();
}
inline void Field::clear_children() {
  children_.Clear();
}
inline ::types_::Field* Field::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:types_.Field.children)
  return children_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::Field >*
Field::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:types_.Field.children)
  return &children_;
}
inline const ::types_::Field& Field::children(int index) const {
  // @@protoc_insertion_point(field_get:types_.Field.children)
  return children_.Get(index);
}
inline ::types_::Field* Field::add_children() {
  // @@protoc_insertion_point(field_add:types_.Field.children)
  return children_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::Field >&
Field::children() const {
  // @@protoc_insertion_point(field_list:types_.Field.children)
  return children_;
}

// -------------------------------------------------------------------

// FieldNode

// optional .types_.Field field = 1;
inline bool FieldNode::has_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldNode::clear_field() {
  if (field_ != nullptr) field_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::Field& FieldNode::field() const {
  const ::types_::Field* p = field_;
  // @@protoc_insertion_point(field_get:types_.FieldNode.field)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::Field*>(
      &::types_::_Field_default_instance_);
}
inline ::types_::Field* FieldNode::release_field() {
  // @@protoc_insertion_point(field_release:types_.FieldNode.field)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::Field* temp = field_;
  field_ = nullptr;
  return temp;
}
inline ::types_::Field* FieldNode::mutable_field() {
  _has_bits_[0] |= 0x00000001u;
  if (field_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::Field>(GetArenaNoVirtual());
    field_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.FieldNode.field)
  return field_;
}
inline void FieldNode::set_allocated_field(::types_::Field* field) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete field_;
  }
  if (field) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      field = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field_ = field;
  // @@protoc_insertion_point(field_set_allocated:types_.FieldNode.field)
}

// -------------------------------------------------------------------

// FunctionNode

// optional string functionName = 1;
inline bool FunctionNode::has_functionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionNode::clear_functionname() {
  functionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FunctionNode::functionname() const {
  // @@protoc_insertion_point(field_get:types_.FunctionNode.functionName)
  return functionname_.GetNoArena();
}
inline void FunctionNode::set_functionname(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  functionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.FunctionNode.functionName)
}
#if LANG_CXX11
inline void FunctionNode::set_functionname(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  functionname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.FunctionNode.functionName)
}
#endif
inline void FunctionNode::set_functionname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  functionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.FunctionNode.functionName)
}
inline void FunctionNode::set_functionname(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  functionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.FunctionNode.functionName)
}
inline ::std::string* FunctionNode::mutable_functionname() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.FunctionNode.functionName)
  return functionname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionNode::release_functionname() {
  // @@protoc_insertion_point(field_release:types_.FunctionNode.functionName)
  if (!has_functionname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return functionname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionNode::set_allocated_functionname(::std::string* functionname) {
  if (functionname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  functionname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), functionname);
  // @@protoc_insertion_point(field_set_allocated:types_.FunctionNode.functionName)
}

// repeated .types_.TreeNode inArgs = 2;
inline int FunctionNode::inargs_size() const {
  return inargs_.size();
}
inline void FunctionNode::clear_inargs() {
  inargs_.Clear();
}
inline ::types_::TreeNode* FunctionNode::mutable_inargs(int index) {
  // @@protoc_insertion_point(field_mutable:types_.FunctionNode.inArgs)
  return inargs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >*
FunctionNode::mutable_inargs() {
  // @@protoc_insertion_point(field_mutable_list:types_.FunctionNode.inArgs)
  return &inargs_;
}
inline const ::types_::TreeNode& FunctionNode::inargs(int index) const {
  // @@protoc_insertion_point(field_get:types_.FunctionNode.inArgs)
  return inargs_.Get(index);
}
inline ::types_::TreeNode* FunctionNode::add_inargs() {
  // @@protoc_insertion_point(field_add:types_.FunctionNode.inArgs)
  return inargs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >&
FunctionNode::inargs() const {
  // @@protoc_insertion_point(field_list:types_.FunctionNode.inArgs)
  return inargs_;
}

// optional .types_.ExtGandivaType returnType = 3;
inline bool FunctionNode::has_returntype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionNode::clear_returntype() {
  if (returntype_ != nullptr) returntype_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::ExtGandivaType& FunctionNode::returntype() const {
  const ::types_::ExtGandivaType* p = returntype_;
  // @@protoc_insertion_point(field_get:types_.FunctionNode.returnType)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::ExtGandivaType*>(
      &::types_::_ExtGandivaType_default_instance_);
}
inline ::types_::ExtGandivaType* FunctionNode::release_returntype() {
  // @@protoc_insertion_point(field_release:types_.FunctionNode.returnType)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::ExtGandivaType* temp = returntype_;
  returntype_ = nullptr;
  return temp;
}
inline ::types_::ExtGandivaType* FunctionNode::mutable_returntype() {
  _has_bits_[0] |= 0x00000002u;
  if (returntype_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::ExtGandivaType>(GetArenaNoVirtual());
    returntype_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.FunctionNode.returnType)
  return returntype_;
}
inline void FunctionNode::set_allocated_returntype(::types_::ExtGandivaType* returntype) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete returntype_;
  }
  if (returntype) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      returntype = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, returntype, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  returntype_ = returntype;
  // @@protoc_insertion_point(field_set_allocated:types_.FunctionNode.returnType)
}

// -------------------------------------------------------------------

// IfNode

// optional .types_.TreeNode cond = 1;
inline bool IfNode::has_cond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IfNode::clear_cond() {
  if (cond_ != nullptr) cond_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::TreeNode& IfNode::cond() const {
  const ::types_::TreeNode* p = cond_;
  // @@protoc_insertion_point(field_get:types_.IfNode.cond)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::TreeNode*>(
      &::types_::_TreeNode_default_instance_);
}
inline ::types_::TreeNode* IfNode::release_cond() {
  // @@protoc_insertion_point(field_release:types_.IfNode.cond)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::TreeNode* temp = cond_;
  cond_ = nullptr;
  return temp;
}
inline ::types_::TreeNode* IfNode::mutable_cond() {
  _has_bits_[0] |= 0x00000001u;
  if (cond_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::TreeNode>(GetArenaNoVirtual());
    cond_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.IfNode.cond)
  return cond_;
}
inline void IfNode::set_allocated_cond(::types_::TreeNode* cond) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete cond_;
  }
  if (cond) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cond = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cond, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  cond_ = cond;
  // @@protoc_insertion_point(field_set_allocated:types_.IfNode.cond)
}

// optional .types_.TreeNode thenNode = 2;
inline bool IfNode::has_thennode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IfNode::clear_thennode() {
  if (thennode_ != nullptr) thennode_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::TreeNode& IfNode::thennode() const {
  const ::types_::TreeNode* p = thennode_;
  // @@protoc_insertion_point(field_get:types_.IfNode.thenNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::TreeNode*>(
      &::types_::_TreeNode_default_instance_);
}
inline ::types_::TreeNode* IfNode::release_thennode() {
  // @@protoc_insertion_point(field_release:types_.IfNode.thenNode)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::TreeNode* temp = thennode_;
  thennode_ = nullptr;
  return temp;
}
inline ::types_::TreeNode* IfNode::mutable_thennode() {
  _has_bits_[0] |= 0x00000002u;
  if (thennode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::TreeNode>(GetArenaNoVirtual());
    thennode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.IfNode.thenNode)
  return thennode_;
}
inline void IfNode::set_allocated_thennode(::types_::TreeNode* thennode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete thennode_;
  }
  if (thennode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      thennode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, thennode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  thennode_ = thennode;
  // @@protoc_insertion_point(field_set_allocated:types_.IfNode.thenNode)
}

// optional .types_.TreeNode elseNode = 3;
inline bool IfNode::has_elsenode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IfNode::clear_elsenode() {
  if (elsenode_ != nullptr) elsenode_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::types_::TreeNode& IfNode::elsenode() const {
  const ::types_::TreeNode* p = elsenode_;
  // @@protoc_insertion_point(field_get:types_.IfNode.elseNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::TreeNode*>(
      &::types_::_TreeNode_default_instance_);
}
inline ::types_::TreeNode* IfNode::release_elsenode() {
  // @@protoc_insertion_point(field_release:types_.IfNode.elseNode)
  _has_bits_[0] &= ~0x00000004u;
  ::types_::TreeNode* temp = elsenode_;
  elsenode_ = nullptr;
  return temp;
}
inline ::types_::TreeNode* IfNode::mutable_elsenode() {
  _has_bits_[0] |= 0x00000004u;
  if (elsenode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::TreeNode>(GetArenaNoVirtual());
    elsenode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.IfNode.elseNode)
  return elsenode_;
}
inline void IfNode::set_allocated_elsenode(::types_::TreeNode* elsenode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete elsenode_;
  }
  if (elsenode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      elsenode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, elsenode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  elsenode_ = elsenode;
  // @@protoc_insertion_point(field_set_allocated:types_.IfNode.elseNode)
}

// optional .types_.ExtGandivaType returnType = 4;
inline bool IfNode::has_returntype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IfNode::clear_returntype() {
  if (returntype_ != nullptr) returntype_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::types_::ExtGandivaType& IfNode::returntype() const {
  const ::types_::ExtGandivaType* p = returntype_;
  // @@protoc_insertion_point(field_get:types_.IfNode.returnType)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::ExtGandivaType*>(
      &::types_::_ExtGandivaType_default_instance_);
}
inline ::types_::ExtGandivaType* IfNode::release_returntype() {
  // @@protoc_insertion_point(field_release:types_.IfNode.returnType)
  _has_bits_[0] &= ~0x00000008u;
  ::types_::ExtGandivaType* temp = returntype_;
  returntype_ = nullptr;
  return temp;
}
inline ::types_::ExtGandivaType* IfNode::mutable_returntype() {
  _has_bits_[0] |= 0x00000008u;
  if (returntype_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::ExtGandivaType>(GetArenaNoVirtual());
    returntype_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.IfNode.returnType)
  return returntype_;
}
inline void IfNode::set_allocated_returntype(::types_::ExtGandivaType* returntype) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete returntype_;
  }
  if (returntype) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      returntype = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, returntype, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  returntype_ = returntype;
  // @@protoc_insertion_point(field_set_allocated:types_.IfNode.returnType)
}

// -------------------------------------------------------------------

// AndNode

// repeated .types_.TreeNode args = 1;
inline int AndNode::args_size() const {
  return args_.size();
}
inline void AndNode::clear_args() {
  args_.Clear();
}
inline ::types_::TreeNode* AndNode::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:types_.AndNode.args)
  return args_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >*
AndNode::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:types_.AndNode.args)
  return &args_;
}
inline const ::types_::TreeNode& AndNode::args(int index) const {
  // @@protoc_insertion_point(field_get:types_.AndNode.args)
  return args_.Get(index);
}
inline ::types_::TreeNode* AndNode::add_args() {
  // @@protoc_insertion_point(field_add:types_.AndNode.args)
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >&
AndNode::args() const {
  // @@protoc_insertion_point(field_list:types_.AndNode.args)
  return args_;
}

// -------------------------------------------------------------------

// OrNode

// repeated .types_.TreeNode args = 1;
inline int OrNode::args_size() const {
  return args_.size();
}
inline void OrNode::clear_args() {
  args_.Clear();
}
inline ::types_::TreeNode* OrNode::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:types_.OrNode.args)
  return args_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >*
OrNode::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:types_.OrNode.args)
  return &args_;
}
inline const ::types_::TreeNode& OrNode::args(int index) const {
  // @@protoc_insertion_point(field_get:types_.OrNode.args)
  return args_.Get(index);
}
inline ::types_::TreeNode* OrNode::add_args() {
  // @@protoc_insertion_point(field_add:types_.OrNode.args)
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::TreeNode >&
OrNode::args() const {
  // @@protoc_insertion_point(field_list:types_.OrNode.args)
  return args_;
}

// -------------------------------------------------------------------

// NullNode

// optional .types_.ExtGandivaType type = 1;
inline bool NullNode::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NullNode::clear_type() {
  if (type_ != nullptr) type_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::ExtGandivaType& NullNode::type() const {
  const ::types_::ExtGandivaType* p = type_;
  // @@protoc_insertion_point(field_get:types_.NullNode.type)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::ExtGandivaType*>(
      &::types_::_ExtGandivaType_default_instance_);
}
inline ::types_::ExtGandivaType* NullNode::release_type() {
  // @@protoc_insertion_point(field_release:types_.NullNode.type)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::ExtGandivaType* temp = type_;
  type_ = nullptr;
  return temp;
}
inline ::types_::ExtGandivaType* NullNode::mutable_type() {
  _has_bits_[0] |= 0x00000001u;
  if (type_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::ExtGandivaType>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.NullNode.type)
  return type_;
}
inline void NullNode::set_allocated_type(::types_::ExtGandivaType* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete type_;
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:types_.NullNode.type)
}

// -------------------------------------------------------------------

// IntNode

// optional int32 value = 1;
inline bool IntNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntNode::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 IntNode::value() const {
  // @@protoc_insertion_point(field_get:types_.IntNode.value)
  return value_;
}
inline void IntNode::set_value(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:types_.IntNode.value)
}

// -------------------------------------------------------------------

// FloatNode

// optional float value = 1;
inline bool FloatNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FloatNode::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float FloatNode::value() const {
  // @@protoc_insertion_point(field_get:types_.FloatNode.value)
  return value_;
}
inline void FloatNode::set_value(float value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:types_.FloatNode.value)
}

// -------------------------------------------------------------------

// DoubleNode

// optional double value = 1;
inline bool DoubleNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleNode::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double DoubleNode::value() const {
  // @@protoc_insertion_point(field_get:types_.DoubleNode.value)
  return value_;
}
inline void DoubleNode::set_value(double value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:types_.DoubleNode.value)
}

// -------------------------------------------------------------------

// BooleanNode

// optional bool value = 1;
inline bool BooleanNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BooleanNode::clear_value() {
  value_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool BooleanNode::value() const {
  // @@protoc_insertion_point(field_get:types_.BooleanNode.value)
  return value_;
}
inline void BooleanNode::set_value(bool value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:types_.BooleanNode.value)
}

// -------------------------------------------------------------------

// LongNode

// optional int64 value = 1;
inline bool LongNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LongNode::clear_value() {
  value_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 LongNode::value() const {
  // @@protoc_insertion_point(field_get:types_.LongNode.value)
  return value_;
}
inline void LongNode::set_value(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
  // @@protoc_insertion_point(field_set:types_.LongNode.value)
}

// -------------------------------------------------------------------

// StringNode

// optional bytes value = 1;
inline bool StringNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringNode::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& StringNode::value() const {
  // @@protoc_insertion_point(field_get:types_.StringNode.value)
  return value_.GetNoArena();
}
inline void StringNode::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.StringNode.value)
}
#if LANG_CXX11
inline void StringNode::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.StringNode.value)
}
#endif
inline void StringNode::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.StringNode.value)
}
inline void StringNode::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.StringNode.value)
}
inline ::std::string* StringNode::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.StringNode.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StringNode::release_value() {
  // @@protoc_insertion_point(field_release:types_.StringNode.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StringNode::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:types_.StringNode.value)
}

// -------------------------------------------------------------------

// BinaryNode

// optional bytes value = 1;
inline bool BinaryNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BinaryNode::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& BinaryNode::value() const {
  // @@protoc_insertion_point(field_get:types_.BinaryNode.value)
  return value_.GetNoArena();
}
inline void BinaryNode::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.BinaryNode.value)
}
#if LANG_CXX11
inline void BinaryNode::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.BinaryNode.value)
}
#endif
inline void BinaryNode::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.BinaryNode.value)
}
inline void BinaryNode::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.BinaryNode.value)
}
inline ::std::string* BinaryNode::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.BinaryNode.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BinaryNode::release_value() {
  // @@protoc_insertion_point(field_release:types_.BinaryNode.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BinaryNode::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:types_.BinaryNode.value)
}

// -------------------------------------------------------------------

// DecimalNode

// optional string value = 1;
inline bool DecimalNode::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DecimalNode::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DecimalNode::value() const {
  // @@protoc_insertion_point(field_get:types_.DecimalNode.value)
  return value_.GetNoArena();
}
inline void DecimalNode::set_value(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.DecimalNode.value)
}
#if LANG_CXX11
inline void DecimalNode::set_value(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.DecimalNode.value)
}
#endif
inline void DecimalNode::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.DecimalNode.value)
}
inline void DecimalNode::set_value(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.DecimalNode.value)
}
inline ::std::string* DecimalNode::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.DecimalNode.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DecimalNode::release_value() {
  // @@protoc_insertion_point(field_release:types_.DecimalNode.value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DecimalNode::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:types_.DecimalNode.value)
}

// optional int32 precision = 2;
inline bool DecimalNode::has_precision() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DecimalNode::clear_precision() {
  precision_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 DecimalNode::precision() const {
  // @@protoc_insertion_point(field_get:types_.DecimalNode.precision)
  return precision_;
}
inline void DecimalNode::set_precision(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  precision_ = value;
  // @@protoc_insertion_point(field_set:types_.DecimalNode.precision)
}

// optional int32 scale = 3;
inline bool DecimalNode::has_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DecimalNode::clear_scale() {
  scale_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 DecimalNode::scale() const {
  // @@protoc_insertion_point(field_get:types_.DecimalNode.scale)
  return scale_;
}
inline void DecimalNode::set_scale(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  scale_ = value;
  // @@protoc_insertion_point(field_set:types_.DecimalNode.scale)
}

// -------------------------------------------------------------------

// TreeNode

// optional .types_.FieldNode fieldNode = 1;
inline bool TreeNode::has_fieldnode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TreeNode::clear_fieldnode() {
  if (fieldnode_ != nullptr) fieldnode_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::FieldNode& TreeNode::fieldnode() const {
  const ::types_::FieldNode* p = fieldnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.fieldNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::FieldNode*>(
      &::types_::_FieldNode_default_instance_);
}
inline ::types_::FieldNode* TreeNode::release_fieldnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.fieldNode)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::FieldNode* temp = fieldnode_;
  fieldnode_ = nullptr;
  return temp;
}
inline ::types_::FieldNode* TreeNode::mutable_fieldnode() {
  _has_bits_[0] |= 0x00000001u;
  if (fieldnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::FieldNode>(GetArenaNoVirtual());
    fieldnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.fieldNode)
  return fieldnode_;
}
inline void TreeNode::set_allocated_fieldnode(::types_::FieldNode* fieldnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fieldnode_;
  }
  if (fieldnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fieldnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fieldnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  fieldnode_ = fieldnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.fieldNode)
}

// optional .types_.FunctionNode fnNode = 2;
inline bool TreeNode::has_fnnode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TreeNode::clear_fnnode() {
  if (fnnode_ != nullptr) fnnode_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::FunctionNode& TreeNode::fnnode() const {
  const ::types_::FunctionNode* p = fnnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.fnNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::FunctionNode*>(
      &::types_::_FunctionNode_default_instance_);
}
inline ::types_::FunctionNode* TreeNode::release_fnnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.fnNode)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::FunctionNode* temp = fnnode_;
  fnnode_ = nullptr;
  return temp;
}
inline ::types_::FunctionNode* TreeNode::mutable_fnnode() {
  _has_bits_[0] |= 0x00000002u;
  if (fnnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::FunctionNode>(GetArenaNoVirtual());
    fnnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.fnNode)
  return fnnode_;
}
inline void TreeNode::set_allocated_fnnode(::types_::FunctionNode* fnnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete fnnode_;
  }
  if (fnnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      fnnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fnnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  fnnode_ = fnnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.fnNode)
}

// optional .types_.IfNode ifNode = 6;
inline bool TreeNode::has_ifnode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TreeNode::clear_ifnode() {
  if (ifnode_ != nullptr) ifnode_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::types_::IfNode& TreeNode::ifnode() const {
  const ::types_::IfNode* p = ifnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.ifNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::IfNode*>(
      &::types_::_IfNode_default_instance_);
}
inline ::types_::IfNode* TreeNode::release_ifnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.ifNode)
  _has_bits_[0] &= ~0x00000004u;
  ::types_::IfNode* temp = ifnode_;
  ifnode_ = nullptr;
  return temp;
}
inline ::types_::IfNode* TreeNode::mutable_ifnode() {
  _has_bits_[0] |= 0x00000004u;
  if (ifnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::IfNode>(GetArenaNoVirtual());
    ifnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.ifNode)
  return ifnode_;
}
inline void TreeNode::set_allocated_ifnode(::types_::IfNode* ifnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ifnode_;
  }
  if (ifnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ifnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ifnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ifnode_ = ifnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.ifNode)
}

// optional .types_.AndNode andNode = 7;
inline bool TreeNode::has_andnode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TreeNode::clear_andnode() {
  if (andnode_ != nullptr) andnode_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::types_::AndNode& TreeNode::andnode() const {
  const ::types_::AndNode* p = andnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.andNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::AndNode*>(
      &::types_::_AndNode_default_instance_);
}
inline ::types_::AndNode* TreeNode::release_andnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.andNode)
  _has_bits_[0] &= ~0x00000008u;
  ::types_::AndNode* temp = andnode_;
  andnode_ = nullptr;
  return temp;
}
inline ::types_::AndNode* TreeNode::mutable_andnode() {
  _has_bits_[0] |= 0x00000008u;
  if (andnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::AndNode>(GetArenaNoVirtual());
    andnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.andNode)
  return andnode_;
}
inline void TreeNode::set_allocated_andnode(::types_::AndNode* andnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete andnode_;
  }
  if (andnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      andnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, andnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  andnode_ = andnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.andNode)
}

// optional .types_.OrNode orNode = 8;
inline bool TreeNode::has_ornode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TreeNode::clear_ornode() {
  if (ornode_ != nullptr) ornode_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::types_::OrNode& TreeNode::ornode() const {
  const ::types_::OrNode* p = ornode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.orNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::OrNode*>(
      &::types_::_OrNode_default_instance_);
}
inline ::types_::OrNode* TreeNode::release_ornode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.orNode)
  _has_bits_[0] &= ~0x00000010u;
  ::types_::OrNode* temp = ornode_;
  ornode_ = nullptr;
  return temp;
}
inline ::types_::OrNode* TreeNode::mutable_ornode() {
  _has_bits_[0] |= 0x00000010u;
  if (ornode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::OrNode>(GetArenaNoVirtual());
    ornode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.orNode)
  return ornode_;
}
inline void TreeNode::set_allocated_ornode(::types_::OrNode* ornode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ornode_;
  }
  if (ornode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ornode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ornode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  ornode_ = ornode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.orNode)
}

// optional .types_.NullNode nullNode = 11;
inline bool TreeNode::has_nullnode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TreeNode::clear_nullnode() {
  if (nullnode_ != nullptr) nullnode_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::types_::NullNode& TreeNode::nullnode() const {
  const ::types_::NullNode* p = nullnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.nullNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::NullNode*>(
      &::types_::_NullNode_default_instance_);
}
inline ::types_::NullNode* TreeNode::release_nullnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.nullNode)
  _has_bits_[0] &= ~0x00000020u;
  ::types_::NullNode* temp = nullnode_;
  nullnode_ = nullptr;
  return temp;
}
inline ::types_::NullNode* TreeNode::mutable_nullnode() {
  _has_bits_[0] |= 0x00000020u;
  if (nullnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::NullNode>(GetArenaNoVirtual());
    nullnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.nullNode)
  return nullnode_;
}
inline void TreeNode::set_allocated_nullnode(::types_::NullNode* nullnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete nullnode_;
  }
  if (nullnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      nullnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nullnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  nullnode_ = nullnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.nullNode)
}

// optional .types_.IntNode intNode = 12;
inline bool TreeNode::has_intnode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TreeNode::clear_intnode() {
  if (intnode_ != nullptr) intnode_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::types_::IntNode& TreeNode::intnode() const {
  const ::types_::IntNode* p = intnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.intNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::IntNode*>(
      &::types_::_IntNode_default_instance_);
}
inline ::types_::IntNode* TreeNode::release_intnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.intNode)
  _has_bits_[0] &= ~0x00000040u;
  ::types_::IntNode* temp = intnode_;
  intnode_ = nullptr;
  return temp;
}
inline ::types_::IntNode* TreeNode::mutable_intnode() {
  _has_bits_[0] |= 0x00000040u;
  if (intnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::IntNode>(GetArenaNoVirtual());
    intnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.intNode)
  return intnode_;
}
inline void TreeNode::set_allocated_intnode(::types_::IntNode* intnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete intnode_;
  }
  if (intnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      intnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  intnode_ = intnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.intNode)
}

// optional .types_.FloatNode floatNode = 13;
inline bool TreeNode::has_floatnode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TreeNode::clear_floatnode() {
  if (floatnode_ != nullptr) floatnode_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::types_::FloatNode& TreeNode::floatnode() const {
  const ::types_::FloatNode* p = floatnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.floatNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::FloatNode*>(
      &::types_::_FloatNode_default_instance_);
}
inline ::types_::FloatNode* TreeNode::release_floatnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.floatNode)
  _has_bits_[0] &= ~0x00000080u;
  ::types_::FloatNode* temp = floatnode_;
  floatnode_ = nullptr;
  return temp;
}
inline ::types_::FloatNode* TreeNode::mutable_floatnode() {
  _has_bits_[0] |= 0x00000080u;
  if (floatnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::FloatNode>(GetArenaNoVirtual());
    floatnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.floatNode)
  return floatnode_;
}
inline void TreeNode::set_allocated_floatnode(::types_::FloatNode* floatnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete floatnode_;
  }
  if (floatnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      floatnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, floatnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  floatnode_ = floatnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.floatNode)
}

// optional .types_.LongNode longNode = 14;
inline bool TreeNode::has_longnode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TreeNode::clear_longnode() {
  if (longnode_ != nullptr) longnode_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::types_::LongNode& TreeNode::longnode() const {
  const ::types_::LongNode* p = longnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.longNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::LongNode*>(
      &::types_::_LongNode_default_instance_);
}
inline ::types_::LongNode* TreeNode::release_longnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.longNode)
  _has_bits_[0] &= ~0x00000100u;
  ::types_::LongNode* temp = longnode_;
  longnode_ = nullptr;
  return temp;
}
inline ::types_::LongNode* TreeNode::mutable_longnode() {
  _has_bits_[0] |= 0x00000100u;
  if (longnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::LongNode>(GetArenaNoVirtual());
    longnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.longNode)
  return longnode_;
}
inline void TreeNode::set_allocated_longnode(::types_::LongNode* longnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete longnode_;
  }
  if (longnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      longnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, longnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  longnode_ = longnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.longNode)
}

// optional .types_.BooleanNode booleanNode = 15;
inline bool TreeNode::has_booleannode() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TreeNode::clear_booleannode() {
  if (booleannode_ != nullptr) booleannode_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::types_::BooleanNode& TreeNode::booleannode() const {
  const ::types_::BooleanNode* p = booleannode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.booleanNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::BooleanNode*>(
      &::types_::_BooleanNode_default_instance_);
}
inline ::types_::BooleanNode* TreeNode::release_booleannode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.booleanNode)
  _has_bits_[0] &= ~0x00000200u;
  ::types_::BooleanNode* temp = booleannode_;
  booleannode_ = nullptr;
  return temp;
}
inline ::types_::BooleanNode* TreeNode::mutable_booleannode() {
  _has_bits_[0] |= 0x00000200u;
  if (booleannode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::BooleanNode>(GetArenaNoVirtual());
    booleannode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.booleanNode)
  return booleannode_;
}
inline void TreeNode::set_allocated_booleannode(::types_::BooleanNode* booleannode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete booleannode_;
  }
  if (booleannode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      booleannode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, booleannode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  booleannode_ = booleannode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.booleanNode)
}

// optional .types_.DoubleNode doubleNode = 16;
inline bool TreeNode::has_doublenode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TreeNode::clear_doublenode() {
  if (doublenode_ != nullptr) doublenode_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::types_::DoubleNode& TreeNode::doublenode() const {
  const ::types_::DoubleNode* p = doublenode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.doubleNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::DoubleNode*>(
      &::types_::_DoubleNode_default_instance_);
}
inline ::types_::DoubleNode* TreeNode::release_doublenode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.doubleNode)
  _has_bits_[0] &= ~0x00000400u;
  ::types_::DoubleNode* temp = doublenode_;
  doublenode_ = nullptr;
  return temp;
}
inline ::types_::DoubleNode* TreeNode::mutable_doublenode() {
  _has_bits_[0] |= 0x00000400u;
  if (doublenode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::DoubleNode>(GetArenaNoVirtual());
    doublenode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.doubleNode)
  return doublenode_;
}
inline void TreeNode::set_allocated_doublenode(::types_::DoubleNode* doublenode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete doublenode_;
  }
  if (doublenode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      doublenode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, doublenode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  doublenode_ = doublenode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.doubleNode)
}

// optional .types_.StringNode stringNode = 17;
inline bool TreeNode::has_stringnode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TreeNode::clear_stringnode() {
  if (stringnode_ != nullptr) stringnode_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::types_::StringNode& TreeNode::stringnode() const {
  const ::types_::StringNode* p = stringnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.stringNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::StringNode*>(
      &::types_::_StringNode_default_instance_);
}
inline ::types_::StringNode* TreeNode::release_stringnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.stringNode)
  _has_bits_[0] &= ~0x00000800u;
  ::types_::StringNode* temp = stringnode_;
  stringnode_ = nullptr;
  return temp;
}
inline ::types_::StringNode* TreeNode::mutable_stringnode() {
  _has_bits_[0] |= 0x00000800u;
  if (stringnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::StringNode>(GetArenaNoVirtual());
    stringnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.stringNode)
  return stringnode_;
}
inline void TreeNode::set_allocated_stringnode(::types_::StringNode* stringnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete stringnode_;
  }
  if (stringnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stringnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stringnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  stringnode_ = stringnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.stringNode)
}

// optional .types_.BinaryNode binaryNode = 18;
inline bool TreeNode::has_binarynode() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TreeNode::clear_binarynode() {
  if (binarynode_ != nullptr) binarynode_->Clear();
  _has_bits_[0] &= ~0x00001000u;
}
inline const ::types_::BinaryNode& TreeNode::binarynode() const {
  const ::types_::BinaryNode* p = binarynode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.binaryNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::BinaryNode*>(
      &::types_::_BinaryNode_default_instance_);
}
inline ::types_::BinaryNode* TreeNode::release_binarynode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.binaryNode)
  _has_bits_[0] &= ~0x00001000u;
  ::types_::BinaryNode* temp = binarynode_;
  binarynode_ = nullptr;
  return temp;
}
inline ::types_::BinaryNode* TreeNode::mutable_binarynode() {
  _has_bits_[0] |= 0x00001000u;
  if (binarynode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::BinaryNode>(GetArenaNoVirtual());
    binarynode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.binaryNode)
  return binarynode_;
}
inline void TreeNode::set_allocated_binarynode(::types_::BinaryNode* binarynode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete binarynode_;
  }
  if (binarynode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      binarynode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, binarynode, submessage_arena);
    }
    _has_bits_[0] |= 0x00001000u;
  } else {
    _has_bits_[0] &= ~0x00001000u;
  }
  binarynode_ = binarynode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.binaryNode)
}

// optional .types_.DecimalNode decimalNode = 19;
inline bool TreeNode::has_decimalnode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TreeNode::clear_decimalnode() {
  if (decimalnode_ != nullptr) decimalnode_->Clear();
  _has_bits_[0] &= ~0x00002000u;
}
inline const ::types_::DecimalNode& TreeNode::decimalnode() const {
  const ::types_::DecimalNode* p = decimalnode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.decimalNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::DecimalNode*>(
      &::types_::_DecimalNode_default_instance_);
}
inline ::types_::DecimalNode* TreeNode::release_decimalnode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.decimalNode)
  _has_bits_[0] &= ~0x00002000u;
  ::types_::DecimalNode* temp = decimalnode_;
  decimalnode_ = nullptr;
  return temp;
}
inline ::types_::DecimalNode* TreeNode::mutable_decimalnode() {
  _has_bits_[0] |= 0x00002000u;
  if (decimalnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::DecimalNode>(GetArenaNoVirtual());
    decimalnode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.decimalNode)
  return decimalnode_;
}
inline void TreeNode::set_allocated_decimalnode(::types_::DecimalNode* decimalnode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete decimalnode_;
  }
  if (decimalnode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      decimalnode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimalnode, submessage_arena);
    }
    _has_bits_[0] |= 0x00002000u;
  } else {
    _has_bits_[0] &= ~0x00002000u;
  }
  decimalnode_ = decimalnode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.decimalNode)
}

// optional .types_.InNode inNode = 21;
inline bool TreeNode::has_innode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void TreeNode::clear_innode() {
  if (innode_ != nullptr) innode_->Clear();
  _has_bits_[0] &= ~0x00004000u;
}
inline const ::types_::InNode& TreeNode::innode() const {
  const ::types_::InNode* p = innode_;
  // @@protoc_insertion_point(field_get:types_.TreeNode.inNode)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::InNode*>(
      &::types_::_InNode_default_instance_);
}
inline ::types_::InNode* TreeNode::release_innode() {
  // @@protoc_insertion_point(field_release:types_.TreeNode.inNode)
  _has_bits_[0] &= ~0x00004000u;
  ::types_::InNode* temp = innode_;
  innode_ = nullptr;
  return temp;
}
inline ::types_::InNode* TreeNode::mutable_innode() {
  _has_bits_[0] |= 0x00004000u;
  if (innode_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::InNode>(GetArenaNoVirtual());
    innode_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.TreeNode.inNode)
  return innode_;
}
inline void TreeNode::set_allocated_innode(::types_::InNode* innode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete innode_;
  }
  if (innode) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      innode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, innode, submessage_arena);
    }
    _has_bits_[0] |= 0x00004000u;
  } else {
    _has_bits_[0] &= ~0x00004000u;
  }
  innode_ = innode;
  // @@protoc_insertion_point(field_set_allocated:types_.TreeNode.inNode)
}

// -------------------------------------------------------------------

// ExpressionRoot

// optional .types_.TreeNode root = 1;
inline bool ExpressionRoot::has_root() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExpressionRoot::clear_root() {
  if (root_ != nullptr) root_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::TreeNode& ExpressionRoot::root() const {
  const ::types_::TreeNode* p = root_;
  // @@protoc_insertion_point(field_get:types_.ExpressionRoot.root)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::TreeNode*>(
      &::types_::_TreeNode_default_instance_);
}
inline ::types_::TreeNode* ExpressionRoot::release_root() {
  // @@protoc_insertion_point(field_release:types_.ExpressionRoot.root)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::TreeNode* temp = root_;
  root_ = nullptr;
  return temp;
}
inline ::types_::TreeNode* ExpressionRoot::mutable_root() {
  _has_bits_[0] |= 0x00000001u;
  if (root_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::TreeNode>(GetArenaNoVirtual());
    root_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.ExpressionRoot.root)
  return root_;
}
inline void ExpressionRoot::set_allocated_root(::types_::TreeNode* root) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete root_;
  }
  if (root) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      root = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  root_ = root;
  // @@protoc_insertion_point(field_set_allocated:types_.ExpressionRoot.root)
}

// optional .types_.Field resultType = 2;
inline bool ExpressionRoot::has_resulttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExpressionRoot::clear_resulttype() {
  if (resulttype_ != nullptr) resulttype_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::Field& ExpressionRoot::resulttype() const {
  const ::types_::Field* p = resulttype_;
  // @@protoc_insertion_point(field_get:types_.ExpressionRoot.resultType)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::Field*>(
      &::types_::_Field_default_instance_);
}
inline ::types_::Field* ExpressionRoot::release_resulttype() {
  // @@protoc_insertion_point(field_release:types_.ExpressionRoot.resultType)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::Field* temp = resulttype_;
  resulttype_ = nullptr;
  return temp;
}
inline ::types_::Field* ExpressionRoot::mutable_resulttype() {
  _has_bits_[0] |= 0x00000002u;
  if (resulttype_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::Field>(GetArenaNoVirtual());
    resulttype_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.ExpressionRoot.resultType)
  return resulttype_;
}
inline void ExpressionRoot::set_allocated_resulttype(::types_::Field* resulttype) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete resulttype_;
  }
  if (resulttype) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      resulttype = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resulttype, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  resulttype_ = resulttype;
  // @@protoc_insertion_point(field_set_allocated:types_.ExpressionRoot.resultType)
}

// -------------------------------------------------------------------

// ExpressionList

// repeated .types_.ExpressionRoot exprs = 2;
inline int ExpressionList::exprs_size() const {
  return exprs_.size();
}
inline void ExpressionList::clear_exprs() {
  exprs_.Clear();
}
inline ::types_::ExpressionRoot* ExpressionList::mutable_exprs(int index) {
  // @@protoc_insertion_point(field_mutable:types_.ExpressionList.exprs)
  return exprs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::ExpressionRoot >*
ExpressionList::mutable_exprs() {
  // @@protoc_insertion_point(field_mutable_list:types_.ExpressionList.exprs)
  return &exprs_;
}
inline const ::types_::ExpressionRoot& ExpressionList::exprs(int index) const {
  // @@protoc_insertion_point(field_get:types_.ExpressionList.exprs)
  return exprs_.Get(index);
}
inline ::types_::ExpressionRoot* ExpressionList::add_exprs() {
  // @@protoc_insertion_point(field_add:types_.ExpressionList.exprs)
  return exprs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::ExpressionRoot >&
ExpressionList::exprs() const {
  // @@protoc_insertion_point(field_list:types_.ExpressionList.exprs)
  return exprs_;
}

// -------------------------------------------------------------------

// Condition

// optional .types_.TreeNode root = 1;
inline bool Condition::has_root() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Condition::clear_root() {
  if (root_ != nullptr) root_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::TreeNode& Condition::root() const {
  const ::types_::TreeNode* p = root_;
  // @@protoc_insertion_point(field_get:types_.Condition.root)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::TreeNode*>(
      &::types_::_TreeNode_default_instance_);
}
inline ::types_::TreeNode* Condition::release_root() {
  // @@protoc_insertion_point(field_release:types_.Condition.root)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::TreeNode* temp = root_;
  root_ = nullptr;
  return temp;
}
inline ::types_::TreeNode* Condition::mutable_root() {
  _has_bits_[0] |= 0x00000001u;
  if (root_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::TreeNode>(GetArenaNoVirtual());
    root_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.Condition.root)
  return root_;
}
inline void Condition::set_allocated_root(::types_::TreeNode* root) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete root_;
  }
  if (root) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      root = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  root_ = root;
  // @@protoc_insertion_point(field_set_allocated:types_.Condition.root)
}

// -------------------------------------------------------------------

// Schema

// repeated .types_.Field columns = 1;
inline int Schema::columns_size() const {
  return columns_.size();
}
inline void Schema::clear_columns() {
  columns_.Clear();
}
inline ::types_::Field* Schema::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:types_.Schema.columns)
  return columns_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::Field >*
Schema::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:types_.Schema.columns)
  return &columns_;
}
inline const ::types_::Field& Schema::columns(int index) const {
  // @@protoc_insertion_point(field_get:types_.Schema.columns)
  return columns_.Get(index);
}
inline ::types_::Field* Schema::add_columns() {
  // @@protoc_insertion_point(field_add:types_.Schema.columns)
  return columns_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::Field >&
Schema::columns() const {
  // @@protoc_insertion_point(field_list:types_.Schema.columns)
  return columns_;
}

// -------------------------------------------------------------------

// GandivaDataTypes

// repeated .types_.ExtGandivaType dataType = 1;
inline int GandivaDataTypes::datatype_size() const {
  return datatype_.size();
}
inline void GandivaDataTypes::clear_datatype() {
  datatype_.Clear();
}
inline ::types_::ExtGandivaType* GandivaDataTypes::mutable_datatype(int index) {
  // @@protoc_insertion_point(field_mutable:types_.GandivaDataTypes.dataType)
  return datatype_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >*
GandivaDataTypes::mutable_datatype() {
  // @@protoc_insertion_point(field_mutable_list:types_.GandivaDataTypes.dataType)
  return &datatype_;
}
inline const ::types_::ExtGandivaType& GandivaDataTypes::datatype(int index) const {
  // @@protoc_insertion_point(field_get:types_.GandivaDataTypes.dataType)
  return datatype_.Get(index);
}
inline ::types_::ExtGandivaType* GandivaDataTypes::add_datatype() {
  // @@protoc_insertion_point(field_add:types_.GandivaDataTypes.dataType)
  return datatype_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >&
GandivaDataTypes::datatype() const {
  // @@protoc_insertion_point(field_list:types_.GandivaDataTypes.dataType)
  return datatype_;
}

// -------------------------------------------------------------------

// GandivaFunctions

// repeated .types_.FunctionSignature function = 1;
inline int GandivaFunctions::function_size() const {
  return function_.size();
}
inline void GandivaFunctions::clear_function() {
  function_.Clear();
}
inline ::types_::FunctionSignature* GandivaFunctions::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:types_.GandivaFunctions.function)
  return function_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::FunctionSignature >*
GandivaFunctions::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:types_.GandivaFunctions.function)
  return &function_;
}
inline const ::types_::FunctionSignature& GandivaFunctions::function(int index) const {
  // @@protoc_insertion_point(field_get:types_.GandivaFunctions.function)
  return function_.Get(index);
}
inline ::types_::FunctionSignature* GandivaFunctions::add_function() {
  // @@protoc_insertion_point(field_add:types_.GandivaFunctions.function)
  return function_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::FunctionSignature >&
GandivaFunctions::function() const {
  // @@protoc_insertion_point(field_list:types_.GandivaFunctions.function)
  return function_;
}

// -------------------------------------------------------------------

// FunctionSignature

// optional string name = 1;
inline bool FunctionSignature::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionSignature::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& FunctionSignature::name() const {
  // @@protoc_insertion_point(field_get:types_.FunctionSignature.name)
  return name_.GetNoArena();
}
inline void FunctionSignature::set_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types_.FunctionSignature.name)
}
#if LANG_CXX11
inline void FunctionSignature::set_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:types_.FunctionSignature.name)
}
#endif
inline void FunctionSignature::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types_.FunctionSignature.name)
}
inline void FunctionSignature::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types_.FunctionSignature.name)
}
inline ::std::string* FunctionSignature::mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:types_.FunctionSignature.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionSignature::release_name() {
  // @@protoc_insertion_point(field_release:types_.FunctionSignature.name)
  if (!has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionSignature::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:types_.FunctionSignature.name)
}

// optional .types_.ExtGandivaType returnType = 2;
inline bool FunctionSignature::has_returntype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionSignature::clear_returntype() {
  if (returntype_ != nullptr) returntype_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::ExtGandivaType& FunctionSignature::returntype() const {
  const ::types_::ExtGandivaType* p = returntype_;
  // @@protoc_insertion_point(field_get:types_.FunctionSignature.returnType)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::ExtGandivaType*>(
      &::types_::_ExtGandivaType_default_instance_);
}
inline ::types_::ExtGandivaType* FunctionSignature::release_returntype() {
  // @@protoc_insertion_point(field_release:types_.FunctionSignature.returnType)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::ExtGandivaType* temp = returntype_;
  returntype_ = nullptr;
  return temp;
}
inline ::types_::ExtGandivaType* FunctionSignature::mutable_returntype() {
  _has_bits_[0] |= 0x00000002u;
  if (returntype_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::ExtGandivaType>(GetArenaNoVirtual());
    returntype_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.FunctionSignature.returnType)
  return returntype_;
}
inline void FunctionSignature::set_allocated_returntype(::types_::ExtGandivaType* returntype) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete returntype_;
  }
  if (returntype) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      returntype = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, returntype, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  returntype_ = returntype;
  // @@protoc_insertion_point(field_set_allocated:types_.FunctionSignature.returnType)
}

// repeated .types_.ExtGandivaType paramTypes = 3;
inline int FunctionSignature::paramtypes_size() const {
  return paramtypes_.size();
}
inline void FunctionSignature::clear_paramtypes() {
  paramtypes_.Clear();
}
inline ::types_::ExtGandivaType* FunctionSignature::mutable_paramtypes(int index) {
  // @@protoc_insertion_point(field_mutable:types_.FunctionSignature.paramTypes)
  return paramtypes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >*
FunctionSignature::mutable_paramtypes() {
  // @@protoc_insertion_point(field_mutable_list:types_.FunctionSignature.paramTypes)
  return &paramtypes_;
}
inline const ::types_::ExtGandivaType& FunctionSignature::paramtypes(int index) const {
  // @@protoc_insertion_point(field_get:types_.FunctionSignature.paramTypes)
  return paramtypes_.Get(index);
}
inline ::types_::ExtGandivaType* FunctionSignature::add_paramtypes() {
  // @@protoc_insertion_point(field_add:types_.FunctionSignature.paramTypes)
  return paramtypes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::ExtGandivaType >&
FunctionSignature::paramtypes() const {
  // @@protoc_insertion_point(field_list:types_.FunctionSignature.paramTypes)
  return paramtypes_;
}

// -------------------------------------------------------------------

// InNode

// optional .types_.FieldNode field = 1;
inline bool InNode::has_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InNode::clear_field() {
  if (field_ != nullptr) field_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::types_::FieldNode& InNode::field() const {
  const ::types_::FieldNode* p = field_;
  // @@protoc_insertion_point(field_get:types_.InNode.field)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::FieldNode*>(
      &::types_::_FieldNode_default_instance_);
}
inline ::types_::FieldNode* InNode::release_field() {
  // @@protoc_insertion_point(field_release:types_.InNode.field)
  _has_bits_[0] &= ~0x00000001u;
  ::types_::FieldNode* temp = field_;
  field_ = nullptr;
  return temp;
}
inline ::types_::FieldNode* InNode::mutable_field() {
  _has_bits_[0] |= 0x00000001u;
  if (field_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::FieldNode>(GetArenaNoVirtual());
    field_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.InNode.field)
  return field_;
}
inline void InNode::set_allocated_field(::types_::FieldNode* field) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete field_;
  }
  if (field) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      field = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  field_ = field;
  // @@protoc_insertion_point(field_set_allocated:types_.InNode.field)
}

// optional .types_.IntConstants intValues = 2;
inline bool InNode::has_intvalues() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InNode::clear_intvalues() {
  if (intvalues_ != nullptr) intvalues_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::types_::IntConstants& InNode::intvalues() const {
  const ::types_::IntConstants* p = intvalues_;
  // @@protoc_insertion_point(field_get:types_.InNode.intValues)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::IntConstants*>(
      &::types_::_IntConstants_default_instance_);
}
inline ::types_::IntConstants* InNode::release_intvalues() {
  // @@protoc_insertion_point(field_release:types_.InNode.intValues)
  _has_bits_[0] &= ~0x00000002u;
  ::types_::IntConstants* temp = intvalues_;
  intvalues_ = nullptr;
  return temp;
}
inline ::types_::IntConstants* InNode::mutable_intvalues() {
  _has_bits_[0] |= 0x00000002u;
  if (intvalues_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::IntConstants>(GetArenaNoVirtual());
    intvalues_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.InNode.intValues)
  return intvalues_;
}
inline void InNode::set_allocated_intvalues(::types_::IntConstants* intvalues) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete intvalues_;
  }
  if (intvalues) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      intvalues = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intvalues, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  intvalues_ = intvalues;
  // @@protoc_insertion_point(field_set_allocated:types_.InNode.intValues)
}

// optional .types_.LongConstants longValues = 3;
inline bool InNode::has_longvalues() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InNode::clear_longvalues() {
  if (longvalues_ != nullptr) longvalues_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::types_::LongConstants& InNode::longvalues() const {
  const ::types_::LongConstants* p = longvalues_;
  // @@protoc_insertion_point(field_get:types_.InNode.longValues)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::LongConstants*>(
      &::types_::_LongConstants_default_instance_);
}
inline ::types_::LongConstants* InNode::release_longvalues() {
  // @@protoc_insertion_point(field_release:types_.InNode.longValues)
  _has_bits_[0] &= ~0x00000004u;
  ::types_::LongConstants* temp = longvalues_;
  longvalues_ = nullptr;
  return temp;
}
inline ::types_::LongConstants* InNode::mutable_longvalues() {
  _has_bits_[0] |= 0x00000004u;
  if (longvalues_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::LongConstants>(GetArenaNoVirtual());
    longvalues_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.InNode.longValues)
  return longvalues_;
}
inline void InNode::set_allocated_longvalues(::types_::LongConstants* longvalues) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete longvalues_;
  }
  if (longvalues) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      longvalues = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, longvalues, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  longvalues_ = longvalues;
  // @@protoc_insertion_point(field_set_allocated:types_.InNode.longValues)
}

// optional .types_.StringConstants stringValues = 4;
inline bool InNode::has_stringvalues() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InNode::clear_stringvalues() {
  if (stringvalues_ != nullptr) stringvalues_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::types_::StringConstants& InNode::stringvalues() const {
  const ::types_::StringConstants* p = stringvalues_;
  // @@protoc_insertion_point(field_get:types_.InNode.stringValues)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::StringConstants*>(
      &::types_::_StringConstants_default_instance_);
}
inline ::types_::StringConstants* InNode::release_stringvalues() {
  // @@protoc_insertion_point(field_release:types_.InNode.stringValues)
  _has_bits_[0] &= ~0x00000008u;
  ::types_::StringConstants* temp = stringvalues_;
  stringvalues_ = nullptr;
  return temp;
}
inline ::types_::StringConstants* InNode::mutable_stringvalues() {
  _has_bits_[0] |= 0x00000008u;
  if (stringvalues_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::StringConstants>(GetArenaNoVirtual());
    stringvalues_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.InNode.stringValues)
  return stringvalues_;
}
inline void InNode::set_allocated_stringvalues(::types_::StringConstants* stringvalues) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete stringvalues_;
  }
  if (stringvalues) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stringvalues = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stringvalues, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  stringvalues_ = stringvalues;
  // @@protoc_insertion_point(field_set_allocated:types_.InNode.stringValues)
}

// optional .types_.BinaryConstants binaryValues = 5;
inline bool InNode::has_binaryvalues() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InNode::clear_binaryvalues() {
  if (binaryvalues_ != nullptr) binaryvalues_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::types_::BinaryConstants& InNode::binaryvalues() const {
  const ::types_::BinaryConstants* p = binaryvalues_;
  // @@protoc_insertion_point(field_get:types_.InNode.binaryValues)
  return p != nullptr ? *p : *reinterpret_cast<const ::types_::BinaryConstants*>(
      &::types_::_BinaryConstants_default_instance_);
}
inline ::types_::BinaryConstants* InNode::release_binaryvalues() {
  // @@protoc_insertion_point(field_release:types_.InNode.binaryValues)
  _has_bits_[0] &= ~0x00000010u;
  ::types_::BinaryConstants* temp = binaryvalues_;
  binaryvalues_ = nullptr;
  return temp;
}
inline ::types_::BinaryConstants* InNode::mutable_binaryvalues() {
  _has_bits_[0] |= 0x00000010u;
  if (binaryvalues_ == nullptr) {
    auto* p = CreateMaybeMessage<::types_::BinaryConstants>(GetArenaNoVirtual());
    binaryvalues_ = p;
  }
  // @@protoc_insertion_point(field_mutable:types_.InNode.binaryValues)
  return binaryvalues_;
}
inline void InNode::set_allocated_binaryvalues(::types_::BinaryConstants* binaryvalues) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete binaryvalues_;
  }
  if (binaryvalues) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      binaryvalues = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, binaryvalues, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  binaryvalues_ = binaryvalues;
  // @@protoc_insertion_point(field_set_allocated:types_.InNode.binaryValues)
}

// -------------------------------------------------------------------

// IntConstants

// repeated .types_.IntNode intValues = 1;
inline int IntConstants::intvalues_size() const {
  return intvalues_.size();
}
inline void IntConstants::clear_intvalues() {
  intvalues_.Clear();
}
inline ::types_::IntNode* IntConstants::mutable_intvalues(int index) {
  // @@protoc_insertion_point(field_mutable:types_.IntConstants.intValues)
  return intvalues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::IntNode >*
IntConstants::mutable_intvalues() {
  // @@protoc_insertion_point(field_mutable_list:types_.IntConstants.intValues)
  return &intvalues_;
}
inline const ::types_::IntNode& IntConstants::intvalues(int index) const {
  // @@protoc_insertion_point(field_get:types_.IntConstants.intValues)
  return intvalues_.Get(index);
}
inline ::types_::IntNode* IntConstants::add_intvalues() {
  // @@protoc_insertion_point(field_add:types_.IntConstants.intValues)
  return intvalues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::IntNode >&
IntConstants::intvalues() const {
  // @@protoc_insertion_point(field_list:types_.IntConstants.intValues)
  return intvalues_;
}

// -------------------------------------------------------------------

// LongConstants

// repeated .types_.LongNode longValues = 1;
inline int LongConstants::longvalues_size() const {
  return longvalues_.size();
}
inline void LongConstants::clear_longvalues() {
  longvalues_.Clear();
}
inline ::types_::LongNode* LongConstants::mutable_longvalues(int index) {
  // @@protoc_insertion_point(field_mutable:types_.LongConstants.longValues)
  return longvalues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::LongNode >*
LongConstants::mutable_longvalues() {
  // @@protoc_insertion_point(field_mutable_list:types_.LongConstants.longValues)
  return &longvalues_;
}
inline const ::types_::LongNode& LongConstants::longvalues(int index) const {
  // @@protoc_insertion_point(field_get:types_.LongConstants.longValues)
  return longvalues_.Get(index);
}
inline ::types_::LongNode* LongConstants::add_longvalues() {
  // @@protoc_insertion_point(field_add:types_.LongConstants.longValues)
  return longvalues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::LongNode >&
LongConstants::longvalues() const {
  // @@protoc_insertion_point(field_list:types_.LongConstants.longValues)
  return longvalues_;
}

// -------------------------------------------------------------------

// StringConstants

// repeated .types_.StringNode stringValues = 1;
inline int StringConstants::stringvalues_size() const {
  return stringvalues_.size();
}
inline void StringConstants::clear_stringvalues() {
  stringvalues_.Clear();
}
inline ::types_::StringNode* StringConstants::mutable_stringvalues(int index) {
  // @@protoc_insertion_point(field_mutable:types_.StringConstants.stringValues)
  return stringvalues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::StringNode >*
StringConstants::mutable_stringvalues() {
  // @@protoc_insertion_point(field_mutable_list:types_.StringConstants.stringValues)
  return &stringvalues_;
}
inline const ::types_::StringNode& StringConstants::stringvalues(int index) const {
  // @@protoc_insertion_point(field_get:types_.StringConstants.stringValues)
  return stringvalues_.Get(index);
}
inline ::types_::StringNode* StringConstants::add_stringvalues() {
  // @@protoc_insertion_point(field_add:types_.StringConstants.stringValues)
  return stringvalues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::StringNode >&
StringConstants::stringvalues() const {
  // @@protoc_insertion_point(field_list:types_.StringConstants.stringValues)
  return stringvalues_;
}

// -------------------------------------------------------------------

// BinaryConstants

// repeated .types_.BinaryNode binaryValues = 1;
inline int BinaryConstants::binaryvalues_size() const {
  return binaryvalues_.size();
}
inline void BinaryConstants::clear_binaryvalues() {
  binaryvalues_.Clear();
}
inline ::types_::BinaryNode* BinaryConstants::mutable_binaryvalues(int index) {
  // @@protoc_insertion_point(field_mutable:types_.BinaryConstants.binaryValues)
  return binaryvalues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::types_::BinaryNode >*
BinaryConstants::mutable_binaryvalues() {
  // @@protoc_insertion_point(field_mutable_list:types_.BinaryConstants.binaryValues)
  return &binaryvalues_;
}
inline const ::types_::BinaryNode& BinaryConstants::binaryvalues(int index) const {
  // @@protoc_insertion_point(field_get:types_.BinaryConstants.binaryValues)
  return binaryvalues_.Get(index);
}
inline ::types_::BinaryNode* BinaryConstants::add_binaryvalues() {
  // @@protoc_insertion_point(field_add:types_.BinaryConstants.binaryValues)
  return binaryvalues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::types_::BinaryNode >&
BinaryConstants::binaryvalues() const {
  // @@protoc_insertion_point(field_list:types_.BinaryConstants.binaryValues)
  return binaryvalues_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace types_

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::types_::GandivaType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::types_::GandivaType>() {
  return ::types_::GandivaType_descriptor();
}
template <> struct is_proto_enum< ::types_::DateUnit> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::types_::DateUnit>() {
  return ::types_::DateUnit_descriptor();
}
template <> struct is_proto_enum< ::types_::TimeUnit> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::types_::TimeUnit>() {
  return ::types_::TimeUnit_descriptor();
}
template <> struct is_proto_enum< ::types_::IntervalType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::types_::IntervalType>() {
  return ::types_::IntervalType_descriptor();
}
template <> struct is_proto_enum< ::types_::SelectionVectorType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::types_::SelectionVectorType>() {
  return ::types_::SelectionVectorType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Types_5f_2eproto
