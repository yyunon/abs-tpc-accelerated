<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>tpc.spark.fletcher</groupId>
        <artifactId>root</artifactId>
        <version>1.0</version>
    </parent>
    <artifactId>native</artifactId>
    <packaging>so</packaging>

    <name>native</name>

    <build>
        <plugins>
            <plugin>
              <groupId>org.xolstice.maven.plugins</groupId>
              <artifactId>protobuf-maven-plugin</artifactId>
              <version>0.6.1</version>
              <configuration>
                <protocExecutable>/home/yyonsel/bulk/project/local/bin/protoc</protocExecutable>
              </configuration>
              <executions>
                <execution>
                  <goals>
                    <goal>compile-cpp</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-11</version>
                <extensions>true</extensions>
                <configuration>
                    <javahOS>${os_name}</javahOS>
                    <sources>
                        <source>
                            <directory>${basedir}/src/main/cpp</directory>
                            <fileNames>
                                <!--
                                <fileName>Macro.h</fileName>
                                <fileName>Tpch.h</fileName>
                                <fileName>Util.h</fileName>
                                <fileName>FileReader.h</fileName>
                                <fileName>ColumnScheduler.h</fileName>
                                <fileName>PlatformWrapper.h</fileName>
                                <fileName>DataSetParquetReader.h</fileName>
                                <fileName>FletcherParquetReader.h</fileName>
                                -->
                                <fileName>DataSetParquetReader.cpp</fileName>
                                <fileName>PlatformWrapper.cpp</fileName>
                                <fileName>FileReader.cpp</fileName>
                                <fileName>FletcherParquetReader.cpp</fileName>
                                <fileName>JNIFletcherParquetReader.cpp</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>${basedir}/src/main/include</directory>
                        </source>
                        <source>
                            <directory>${basedir}/src/main/cpp/jni</directory>
                            <fileNames>
                              <!--
                              <fileName>Assertions.h</fileName>
                              <fileName>Converters.h</fileName>
                              <fileName>JavaMemoryPool.h</fileName>
                              <fileName>JavaResizableBuffer.h</fileName>
                              <fileName>ProtobufSchemaDeserializer.h</fileName>
                              -->
                              <fileName>Converters.cpp</fileName>
                              <fileName>JavaMemoryPool.cpp</fileName>
                              <fileName>JavaResizableBuffer.cpp</fileName>
                              <fileName>ProtobufSchemaDeserializer.cpp</fileName>
                              <fileName>JNILoader.cpp</fileName>
                            </fileNames>
                        </source>
                    </sources>
                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>g++</compilerExecutable>
                    <linkerExecutable>g++</linkerExecutable>
                    <compilerStartOptions>
                        <compilerStartOption>-I ${JAVA_HOME}/include/</compilerStartOption>
                        <compilerStartOption>-I ${JAVA_HOME}/include/linux/</compilerStartOption>
                        <compilerStartOption>-I /usr/include/</compilerStartOption>
                        <compilerStartOption>-I ${env.WORK}/local/include/</compilerStartOption>
                    </compilerStartOptions>
                    <compilerEndOptions>
                        <compilerEndOption>-std=gnu++17</compilerEndOption>
                    </compilerEndOptions>
                    <linkerStartOptions>
                        <linkerStartOption>-shared</linkerStartOption>
                        <linkerStartOption>-I ${JAVA_HOME}/include/</linkerStartOption>
                        <linkerStartOption>-I ${JAVA_HOME}/include/linux/</linkerStartOption>
                        <linkerStartOption>-I ${JAVA_HOME}/lib/</linkerStartOption>
                        <linkerStartOption>-I /usr/include/</linkerStartOption>
                        <linkerStartOption>-L /usr/lib/</linkerStartOption>
                        <linkerStartOption>-L /usr/lib64/</linkerStartOption>
                        <linkerStartOption>-L ${env.WORK}/local/lib/</linkerStartOption>
                        <linkerStartOption>-L ${env.WORK}/local/lib64/</linkerStartOption>
                    </linkerStartOptions>
                    <linkerEndOptions>
                        <linkerEndOption>-shared</linkerEndOption>
                        <linkerEndOption>-fPIC</linkerEndOption>
                        <linkerEndOption>-lgandiva_jni</linkerEndOption>
                        <linkerEndOption>-lprotobuf</linkerEndOption>
                        <linkerEndOption>-larrow_dataset</linkerEndOption>
                        <linkerEndOption>-larrow</linkerEndOption>
                        <linkerEndOption>-lfletcher</linkerEndOption>
                        <linkerEndOption>-lfletcher_snap</linkerEndOption>
                        <linkerEndOption>-lparquet</linkerEndOption>
                        <linkerEndOption>-o ${project.build.directory}/lib${name}.so</linkerEndOption>
                    </linkerEndOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>${JAVA_HOME}/bin/javah</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>initialize</goal>
                            <goal>compile</goal>
                            <goal>link</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
